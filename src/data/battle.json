{
  "gymArena1PreBattle": {
    "Brett": {
      "name": "Brett",
      "sprite": "Brett",
      "title": "INSTRUCTOR",
      "openingMessage": "Get ready for some HTML questions good sir!",
      "level": 45,
      "arena": "ice",
      "damageToEnemy": 25,
      "damageToPlayer": 20,
      "losingMessage": "Sorry good sir, come back after some prep!",
      "winningMessage": "Good sir, Cody is going to love you!",
      "onWin": {
        "name": "scene-transition-start",
        "action": {
          "level": "gymArena1PostBattle",
          "playerPosition": {
            "x": 6,
            "y": 3
          },
          "playerPositionOnDOM": [
            288,
            192
          ],
          "backgroundPositionOnDOM": [
            96,
            0
          ],
          "playerFacingPosition": "up"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "Block elements are normally displayed without starting a new line.",
          "answers": [
            "False",
            "True",
            "I don't know",
            "I don't know"
          ],
          "correct": 0
        },
        {
          "question": "Which HTML element defines the title of a document?",
          "answers": [
            "<head>",
            "<meta>",
            "<title>",
            "<heading>"
          ],
          "correct": 2
        },
        {
          "question": "Which HTML attribute specifies an alternate text for an image, if the image cannot be displayed?",
          "answers": [
            "title",
            "src",
            "longdesc",
            "alt"
          ],
          "correct": 3
        },
        {
          "question": "Which doctype is correct for HTML5?",
          "answers": [
            "<!DOCTYPE html>",
            "<!DOCTYPE HTML PUBLIC W3C URL>",
            "<!DOCTYPE HTML5>",
            "<!DOCTYPE htm>"
          ],
          "correct": 0
        },
        {
          "question": "Which HTML element is used to specify a footer for a document or section?",
          "answers": [
            "<footer>",
            "<section>",
            "<bottom>",
            "<feeter>"
          ],
          "correct": 0
        },
        {
          "question": "In HTML, you can embed SVG elements directly into an HTML page.",
          "answers": [
            "False",
            "True",
            "I don't know",
            "I don't know"
          ],
          "correct": 1
        },
        {
          "question": "What is the correct HTML element for playing video files?",
          "answers": [
            "<movie>",
            "<video>",
            "<media>",
            "<mov>"
          ],
          "correct": 1
        },
        {
          "question": "What is the correct HTML element for playing audio files?",
          "answers": [
            "<sound>",
            "<mp3>",
            "<audio>",
            "<mov>"
          ],
          "correct": 2
        },
        {
          "question": "The HTML global attribute, \"contenteditable\" is used to:",
          "answers": [
            "Specify if the content of an element is editable",
            "Update content from the server",
            "Specifies a context menu for an element.",
            "the position of the first found content"
          ],
          "correct": 0
        },
        {
          "question": "In HTML, onblur and onfocus are:",
          "answers": [
            "HTML elements",
            "Style attributes",
            "Event attributes",
            "CSS Selectors"
          ],
          "correct": 2
        },
        {
          "question": "Graphics defined by SVG is in which format?",
          "answers": [
            "XML",
            "CSS",
            "HTML",
            "JSON"
          ],
          "correct": 0
        },
        {
          "question": "The HTML <canvas> element is used to:",
          "answers": [
            "draw graphics",
            "manipulate data in MySQL",
            "create draggable elements",
            "display database records"
          ],
          "correct": 0
        },
        {
          "question": "In HTML, which attribute is used to specify that an input field must be filled out?",
          "answers": [
            "formvalidate",
            "placeholder",
            "required",
            "validate"
          ],
          "correct": 2
        },
        {
          "question": "Which input type defines a slider control?",
          "answers": [
            "search",
            "slider",
            "controls",
            "range"
          ],
          "correct": 3
        },
        {
          "question": "Which HTML element is used to display a scalar measurement within a range?",
          "answers": [
            "<meter>",
            "<measure>",
            "<gauge>",
            "<range>"
          ],
          "correct": 0
        },
        {
          "question": "Which HTML element defines navigation links?",
          "answers": [
            "<nav>",
            "<navigation>",
            "<navigate>",
            "<navbar>"
          ],
          "correct": 0
        },
        {
          "question": "In HTML, what does the <aside> element define?",
          "answers": [
            "A navigation list",
            "Content aside from the page content",
            "The ASCII character-set",
            "A side menu"
          ],
          "correct": 1
        },
        {
          "question": "Which HTML element is used to specify a header for a document or section?",
          "answers": [
            "<header>",
            "<top>",
            "<section>",
            "<head>"
          ],
          "correct": 0
        },
        {
          "question": "What is the correct HTML for inserting a background image?",
          "answers": [
            "<body style=\"background-image:url()\">",
            "<background img=\"background.gif\">",
            "<body bg=\"background.gif\">",
            "<body background=\"background.gif\">"
          ],
          "correct": 0
        },
        {
          "question": "An <iframe> is used to display a web page within a web page.",
          "answers": [
            "False",
            "There is no such thing as an <iframe>",
            "True",
            "I don't know"
          ],
          "correct": 2
        }
      ]
    }
  },
  "gymArena2PreBattle": {
    "Cody": {
      "name": "Cody",
      "sprite": "Cody",
      "title": "INSTRUCTOR",
      "openingMessage": "You know I've contributed to the MDN documentation before right?",
      "level": 45,
      "arena": "grass",
      "damageToEnemy": 20,
      "damageToPlayer": 25,
      "losingMessage": "You should have taken the prep course!",
      "winningMessage": "Oh man, Scott seems to have his work cut out for him.",
      "onWin": {
        "name": "scene-transition-start",
        "action": {
          "level": "gymArena2PostBattle",
          "playerPosition": {
            "x": 6,
            "y": 3
          },
          "playerPositionOnDOM": [
            288,
            192
          ],
          "backgroundPositionOnDOM": [
            96,
            0
          ],
          "playerFacingPosition": "up"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "How do you make each word in start with a capital letter?",
          "answers": [
            "text-transform:capitalize",
            "text-style:capitalize",
            "You can't do that with CSS",
            "transform:capitalize"
          ],
          "correct": 0
        },
        {
          "question": "Which property is used to change the font of an element?",
          "answers": [
            "font-style",
            "font-weight",
            "font-family",
            "font-bold"
          ],
          "correct": 2
        },
        {
          "question": "How do you make the text bold?",
          "answers": [
            "font:bold;",
            "style:bold;",
            "font-weight:bold;",
            "font-weight:big;"
          ],
          "correct": 2
        },
        {
          "question": "How do you display a border like this: top: 10 pixels, bottom: 5 pixels, left: 20 pixels, right: 1pixel?",
          "answers": [
            "border-width:10px 1px 5px 20px;",
            "border-width:5px 20px 10px 1px;",
            "border-width:10px 20px 5px 1px;",
            "border-width:10px 5px 20px 1px;"
          ],
          "correct": 0
        },
        {
          "question": "Which property is used to change the left margin of an element?",
          "answers": [
            "indent",
            "margin-left",
            "padding-left",
            "push-left"
          ],
          "correct": 1
        },
        {
          "question": "When using the padding property, are you allowed to use negative values?",
          "answers": [
            "No",
            "Yes",
            "Sometimes",
            "I don't know"
          ],
          "correct": 0
        },
        {
          "question": "How do you make a list that lists its items with squares?",
          "answers": [
            "list: square;",
            "list-style-type: square;",
            "list-type: square;",
            "list-type: square;"
          ],
          "correct": 1
        },
        {
          "question": "How do you select an element with id 'demo'?",
          "answers": [
            "demo",
            "#demo",
            "*demo",
            ".demo"
          ],
          "correct": 1
        },
        {
          "question": "How do you select elements with class name 'test'?",
          "answers": [
            "*test",
            "#test",
            ".test",
            "test"
          ],
          "correct": 2
        },
        {
          "question": "How do you select all p elements inside a div element?",
          "answers": [
            "div + p",
            "div.p",
            "div p",
            "div > p"
          ],
          "correct": 2
        },
        {
          "question": "How do you group selectors?",
          "answers": [
            "Separate each selector with a plus sign",
            "Separate each selector with a space",
            "Separate each selector with a comma",
            "You can't"
          ],
          "correct": 2
        },
        {
          "question": "What is the default value of the position property?",
          "answers": [
            "fixed",
            "absolute",
            "relative",
            "static"
          ],
          "correct": 3
        },
        {
          "question": "A CSS rule-set consists of",
          "answers": [
            "CSS styling attributes",
            "Values",
            "Properties",
            "A selector and a declaration block"
          ],
          "correct": 3
        },
        {
          "question": "A CSS rule-set consists of:",
          "answers": [
            "CSS styling attributes",
            "Values",
            "Properties",
            "A selector and a declaration block"
          ],
          "correct": 3
        },
        {
          "question": "What is the rem unit?",
          "answers": [
            "Line height of the element.",
            "Font size of the root element.",
            "1% of the viewport's height.",
            "Font size of the parent"
          ],
          "correct": 1
        },
        {
          "question": "What is the em unit?",
          "answers": [
            "Line height of the element.",
            "Font size of the root element.",
            "1% of the viewport's height.",
            "Font size multiplied off the element or parent"
          ],
          "correct": 3
        },
        {
          "question": "In this list what is the strongest in specificity?",
          "answers": [
            "body div p",
            "div",
            "li > ul",
            ".class"
          ],
          "correct": 3
        },
        {
          "question": "In this list what is the strongest in specificity?",
          "answers": [
            ".myClass.yourClass",
            "[type=checkbox]",
            "::placeholder",
            ".class"
          ],
          "correct": 0
        },
        {
          "question": "In this list what is the strongest in specificity?",
          "answers": [
            ".myClass.yourClass.hisClass",
            "#meow",
            "::placeholder",
            "div"
          ],
          "correct": 1
        },
        {
          "question": "In this list what is the strongest in specificity?",
          "answers": [
            "#id > div",
            ".class.yourClass > div",
            "#id > #id2 > div",
            "div .class"
          ],
          "correct": 2
        }
      ]
    }
  },
  "gymArena3PreBattle": {
    "Scott": {
      "name": "Scott",
      "sprite": "Scott",
      "title": "INSTRUCTOR",
      "openingMessage": "Did you know that Diet Coke has zero calories?",
      "level": 45,
      "arena": "psychic",
      "damageToEnemy": 20,
      "damageToPlayer": 25,
      "losingMessage": "GO BACK AND READ DAMMIT",
      "winningMessage": "Hmph, you're ok I guess.  Let's see how you handle Tim H.",
      "onWin": {
        "name": "scene-transition-start",
        "action": {
          "level": "gymArena3PostBattle",
          "playerPosition": {
            "x": 6,
            "y": 3
          },
          "playerPositionOnDOM": [
            288,
            192
          ],
          "backgroundPositionOnDOM": [
            96,
            0
          ],
          "playerFacingPosition": "up"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "Which element property is vulnerable to XSS attacks?",
          "answers": [
            "innerHTML",
            "textContent",
            "innerText",
            "text()"
          ],
          "correct": 0
        },
        {
          "question": "What is the attribute to use on a script tag when loading in an external js file?",
          "answers": [
            "href",
            "src",
            "name",
            "rel"
          ],
          "correct": 1
        },
        {
          "question": "Variables declared with var are ______ scoped.",
          "answers": [
            "block",
            "function",
            "code",
            "lexical"
          ],
          "correct": 1
        },
        {
          "question": "Variables declared with const are ______ scoped.",
          "answers": [
            "block",
            "function",
            "code",
            "lexical"
          ],
          "correct": 0
        },
        {
          "question": "Variables declared with let are ______ scoped.",
          "answers": [
            "block",
            "function",
            "code",
            "lexical"
          ],
          "correct": 0
        },
        {
          "question": "What is the difference between the == and the === comparison operator?",
          "answers": [
            "== checks type and === checks only value",
            "== checks value and === checks only type",
            "== checks type and === checks value and type",
            "== checks value and === checks value and type"
          ],
          "correct": 3
        },
        {
          "question": "What is the assignment operator?",
          "answers": [
            "====",
            "===",
            "==",
            "="
          ],
          "correct": 3
        },
        {
          "question": "Which expression resolves to true?",
          "answers": [
            "!true",
            "!!0",
            "Boolean(5 % 2)",
            "5 <= 3"
          ],
          "correct": 2
        },
        {
          "question": "filter, map, and reduce are known as ______.",
          "answers": [
            "Closures",
            "Prototypes",
            "Higher Order Functions",
            "Classes"
          ],
          "correct": 2
        },
        {
          "question": "In JavaScript, functions are _________.",
          "answers": [
            "First class citizens",
            "Array like",
            "Getters",
            "Iterable"
          ],
          "correct": 0
        },
        {
          "question": "JavaScript is a _______ based language.",
          "answers": [
            "Class",
            "Prototype",
            "Function",
            "Flux"
          ],
          "correct": 1
        },
        {
          "question": "setInterval is a ______.",
          "answers": [
            "Browser Api",
            "Constructor function",
            "Synchronous method",
            "Prototype"
          ],
          "correct": 0
        },
        {
          "question": "var array = new Array(15) returns:",
          "answers": [
            "An array with a length of 15",
            "An array with 15 sub-arrays",
            "An array with 15 at the 0 index",
            "A syntax error"
          ],
          "correct": 0
        },
        {
          "question": "{} === {} returns:",
          "answers": [
            "False",
            "True",
            "Undefined",
            "A syntax error"
          ],
          "correct": 0
        },
        {
          "question": "In JavaScript, strings are ______",
          "answers": [
            "Reference Data Types",
            "Undefined",
            "Immutable",
            "Sorted"
          ],
          "correct": 2
        },
        {
          "question": "Reverse is a method on the prototype of ______",
          "answers": [
            "String",
            "Array",
            "Object",
            "Function"
          ],
          "correct": 1
        },
        {
          "question": "Async functions always return",
          "answers": [
            "undefined unless stated otherwise",
            "A promise",
            "only when using await",
            "only with an explicit return statement"
          ],
          "correct": 1
        },
        {
          "question": "Functions without a return statement always return ______",
          "answers": [
            "0",
            "A syntax error without an explicit return statement",
            "1",
            "undefined"
          ],
          "correct": 3
        },
        {
          "question": "Why can't you access values in an array using dot notation?",
          "answers": [
            "Arrays aren't objects",
            "Numbers are invalid variable names",
            "Arrays are indexed",
            "You can"
          ],
          "correct": 1
        },
        {
          "question": "jQuery is a ______",
          "answers": [
            "Library",
            "Design Pattern",
            "Framework",
            "A lifestyle"
          ],
          "correct": 0
        }
      ]
    }
  },
  "gymArena4PreBattle": {
    "Tim H": {
      "name": "Tim H",
      "sprite": "TimH",
      "title": "INSTRUCTOR",
      "openingMessage": "The time complexity of this battle is O(n)",
      "level": 45,
      "arena": "dirt",
      "damageToEnemy": 20,
      "damageToPlayer": 25,
      "losingMessage": "Health has reached zero, come back with some more skill.",
      "winningMessage": "throw new Exception('I lost')",
      "onWin": {
        "name": "scene-transition-start",
        "action": {
          "level": "gymArena4PostBattle",
          "playerPosition": {
            "x": 6,
            "y": 5
          },
          "playerPositionOnDOM": [
            288,
            192
          ],
          "backgroundPositionOnDOM": [
            96,
            -128
          ],
          "playerFacingPosition": "up"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "With SQL, how do you select all the records from a table named \"Persons\" where the value of the column \"FirstName\" is \"Peter\"?",
          "answers": [
            "SELECT [all] FROM Persons WHERE FirstName LIKE 'Peter'",
            "SELECT [all] FROM Persons WHERE FirstName='Peter'",
            "SELECT * FROM Persons WHERE FirstName<>'Peter'",
            "SELECT * FROM Persons WHERE FirstName='Peter'"
          ],
          "correct": 3
        },
        {
          "question": "With SQL, how do you select all the records from a table named \"Persons\" where the value of the column \"FirstName\" starts with an \"a\"?",
          "answers": [
            "SELECT * FROM Persons WHERE FirstName LIKE 'a%'",
            "SELECT * FROM Persons WHERE FirstName='%a%'",
            "SELECT * FROM Persons WHERE FirstName='a'",
            "SELECT * FROM Persons WHERE FirstName LIKE '%a'"
          ],
          "correct": 0
        },
        {
          "question": "The OR operator displays a record if ANY conditions listed are true. The AND operator displays a record if ALL of the conditions listed are true",
          "answers": [
            "False",
            "True",
            "AND and OR are not operators",
            "I don't know"
          ],
          "correct": 1
        },
        {
          "question": "Which SQL statement is used to return only different values?",
          "answers": [
            "SELECT DISTINCT",
            "SELECT DIFFERENT",
            "SELECT UNIQUE",
            "SELECT SOME"
          ],
          "correct": 0
        },
        {
          "question": "Which SQL keyword is used to sort the result-set?",
          "answers": [
            "SORT",
            "ORDER",
            "SORT BY",
            "ORDER BY"
          ],
          "correct": 3
        },
        {
          "question": "With SQL, how can you return all the records from a table named \"Persons\" sorted descending by \"FirstName\"?",
          "answers": [
            "SELECT * FROM Persons SORT BY 'FirstName' DESC",
            "SELECT * FROM Persons ORDER FirstName DESC",
            "SELECT * FROM Persons SORT 'FirstName' DESC",
            "SELECT * FROM Persons ORDER BY FirstName DESC"
          ],
          "correct": 3
        },
        {
          "question": "With SQL, how can you insert \"Olsen\" as the \"LastName\" in the \"Persons\" table?",
          "answers": [
            "INSERT ('Olsen') INTO Persons (LastName)",
            "INSERT INTO Persons ('Olsen') INTO LastName",
            "INSERT INTO Persons (LastName) VALUES ('Olsen')",
            "INSERT INTO Persons (LastName) = ('Olsen')"
          ],
          "correct": 2
        },
        {
          "question": "With SQL, how can you delete the records where the \"FirstName\" is \"Peter\" in the Persons Table?",
          "answers": [
            "DELETE FirstName='Peter' FROM Persons",
            "DELETE ROW FirstName='Peter' FROM Persons",
            "DELETE FROM Persons WHERE FirstName = 'Peter'",
            "DELETE FROM Persons WHEN FirstName = 'Peter'"
          ],
          "correct": 2
        },
        {
          "question": "With SQL, how can you return the number of records in the \"Persons\" table?",
          "answers": [
            "SELECT NO(*) FROM Persons",
            "SELECT LEN(*) FROM Persons",
            "SELECT COUNT(*) FROM Persons",
            "SELECT COLUMNS(*) FROM Persons"
          ],
          "correct": 2
        },
        {
          "question": "What is the most common type of join?",
          "answers": [
            "INSIDE JOIN",
            "JOINED TABLE",
            "JOINED",
            "INNER JOIN"
          ],
          "correct": 3
        },
        {
          "question": "Which operator is used to select values within a range?",
          "answers": [
            "BETWEEN",
            "WITHIN",
            "RANGE",
            "AND"
          ],
          "correct": 0
        },
        {
          "question": "The NOT NULL constraint enforces a column to not accept NULL values.",
          "answers": [
            "False",
            "True",
            "I don't know",
            "NOT NULL is not a constraint"
          ],
          "correct": 1
        },
        {
          "question": "Which operator is used to search for a specified pattern in a column?",
          "answers": [
            "FROM",
            "LIKE",
            "GET",
            "WHERE"
          ],
          "correct": 1
        },
        {
          "question": "Which SQL statement is used to create a database table called 'Customers'?",
          "answers": [
            "CREATE DATABASE TAB Customers",
            "CREATE TABLE Customers",
            "CREATE DATABASE TABLE Customers",
            "CREATE DB Customers"
          ],
          "correct": 1
        }
      ]
    }
  },
  "gymArena5PreBattle": {
    "Tim D": {
      "name": "Tim D",
      "sprite": "TimD",
      "title": "INSTRUCTOR",
      "openingMessage": "Understanding how HTTP messages work is extremely important",
      "level": 45,
      "arena": "normal",
      "damageToEnemy": 17,
      "damageToPlayer": 33,
      "losingMessage": "You didn't read the documentation did you.",
      "winningMessage": "...",
      "onWin": {
        "name": "scene-transition-start",
        "action": {
          "level": "gymArena5PostBattle",
          "playerPosition": {
            "x": 6,
            "y": 4
          },
          "playerPositionOnDOM": [
            320,
            192
          ],
          "backgroundPositionOnDOM": [
            128,
            -64
          ],
          "playerFacingPosition": "up"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "What do Nginx and Node.js have in common?",
          "answers": [
            "Ryan Dahl created both",
            "An Event Loop",
            "Igor Sysoev created both",
            "They both use JavaScript"
          ],
          "correct": 1
        },
        {
          "question": "A regression in programming occurs when:",
          "answers": [
            "Fixing one bug creates another",
            "Force pushing changes to master",
            "The senior developer quits",
            "The project manager learns about agile"
          ],
          "correct": 0
        },
        {
          "question": "HTTP stands for:",
          "answers": [
            "Hypertext Typed Preference",
            "Hypertext Transfer Protocol",
            "Hypertyped Transfer Protocol",
            "Hypertext Typed Protocol"
          ],
          "correct": 1
        },
        {
          "question": "What is the first part of an HTTP request message?",
          "answers": [
            "Body",
            "A blank line",
            "HTTP headers",
            "A start-line"
          ],
          "correct": 3
        },
        {
          "question": "What is the first part of an HTTP response message?",
          "answers": [
            "Body",
            "A blank line",
            "HTTP headers",
            "A start-line"
          ],
          "correct": 3
        },
        {
          "question": "Which of these is NOT an HTTP method?",
          "answers": [
            "PUT",
            "PATCH",
            "HEAD",
            "SEND"
          ],
          "correct": 3
        },
        {
          "question": "HTTP request headers are optional.",
          "answers": [
            "True",
            "False",
            "I don't know",
            "I don't know"
          ],
          "correct": 0
        },
        {
          "question": "What is a server?",
          "answers": [
            "A computer or software that responds to clients",
            "A computer that stores data",
            "An development environment where you can write software",
            "A virtual machine where users can upload images"
          ],
          "correct": 0
        },
        {
          "question": "Besides syntactically, what is the difference between an es5 function and es6 arrow function?",
          "answers": [
            "Arrow functions are faster",
            "Arrow functions have a lexical this",
            "Es5 functions can't be used as a constructor function",
            "Arrow functions can be invoked with new"
          ],
          "correct": 1
        },
        {
          "question": "Webpack can be used as a JavaScript ______",
          "answers": [
            "Compiler",
            "Transpiler",
            "Bundler",
            "All the above"
          ],
          "correct": 3
        },
        {
          "question": "Who created JavaScript?",
          "answers": [
            "Robert C. Martin",
            "Ryan Dahl",
            "Brendan Eich",
            "Koyomi Araragi"
          ],
          "correct": 2
        },
        {
          "question": "JavaScript is a _________ programming language.",
          "answers": [
            "Functional",
            "Object Oriented",
            "Procedural",
            "Multi-Paradigm"
          ],
          "correct": 3
        },
        {
          "question": "JavaScript is a _________ programming language.",
          "answers": [
            "Compiled",
            "Interpreted",
            "Neither Compiled nor Interpreted",
            "I don't know"
          ],
          "correct": 1
        },
        {
          "question": "Which of these is not part of an HTTP message.",
          "answers": [
            "Start line",
            "HTTP headers",
            "HTTP footers",
            "Body"
          ],
          "correct": 2
        },
        {
          "question": "Which of these is NOT a functional programing concept:",
          "answers": [
            "Pure functions",
            "Functions are first class citizens",
            "Avoid side-effects",
            "Mutable Variables"
          ],
          "correct": 3
        },
        {
          "question": "Which of these is NOT a pillar of Object Oriented Programming:",
          "answers": [
            "Inheritance",
            "Encapsulation",
            "Abstraction",
            "Monomorphism"
          ],
          "correct": 3
        },
        {
          "question": "Which of these does NOT use Chromium's open source v8 engine",
          "answers": [
            "Visual Studio Code",
            "Node.js",
            "Firefox",
            "Microsoft Edge"
          ],
          "correct": 2
        },
        {
          "question": "Which of these is NOT a principle of SOLID:",
          "answers": [
            "Single-responsiblity Principle",
            "Dependency Injection Principle",
            "Open-closed Principle",
            "Liskov Substitution Principle"
          ],
          "correct": 1
        }
      ]
    }
  },
  "gymArena6": {
    "Uzair": {
      "name": "Uzair",
      "sprite": "Uzair",
      "title": "INSTRUCTOR",
      "openingMessage": "Oh boy here comes the anxiety.",
      "level": 45,
      "arena": "normal",
      "damageToEnemy": 17,
      "damageToPlayer": 33,
      "losingMessage": "If you feel cheated, open an issue.",
      "winningMessage": "Ah crap.",
      "onWin": {
        "name": "npc-battle-end",
        "action": {
          "name": "Uzair",
          "level": "gymArena6"
        }
      },
      "onLoss": {
        "name": "scene-transition-start",
        "action": {
          "level": "home",
          "playerPosition": {
            "x": 11,
            "y": 15
          },
          "playerPositionOnDOM": [
            288,
            64
          ],
          "backgroundPositionOnDOM": [
            -64,
            -896
          ],
          "playerFacingPosition": "down"
        }
      },
      "questions": [
        {
          "question": "What happens to variables in functions after the function has finished executing?",
          "answers": [
            "They are stored in the lexical scope",
            "They are garbage collected",
            "They are redeclared in the global scope",
            "They are ALWAYS stored in the preserved scope chain in a closure"
          ],
          "correct": 1
        },
        {
          "question": "In a normal browser environment, what is the value of this in the global scope?",
          "answers": [
            "Document",
            "Window",
            "Global",
            "undefined"
          ],
          "correct": 1
        },
        {
          "question": "What is the DOM?",
          "answers": [
            "The content of an HTML document in the form of objects",
            "An object containing methods related to network requests",
            "A browser api that allows us to access the clients information",
            "An asynchronous function that lets us delay function calls"
          ],
          "correct": 0
        },
        {
          "question": "What does document.querySelectorAll() return?",
          "answers": [
            "A NodeList",
            "An Array",
            "A Map",
            "A Set"
          ],
          "correct": 0
        },
        {
          "question": "What does Number(true) return?",
          "answers": [
            "0",
            "1",
            "true",
            "A syntax error"
          ],
          "correct": 1
        },
        {
          "question": "What is the difference between an object and a function?",
          "answers": [
            "Objects can be passed as arguments to functions",
            "Functions don't have a this context",
            "Functions have .bind, .call, and .apply methods",
            "There is no difference"
          ],
          "correct": 2
        },
        {
          "question": "Typescript is a superset of JavaScript.",
          "answers": [
            "True",
            "False, Typescript is a JavaScript framework",
            "False, Typescript is a JavaScript library",
            "False, Typescript is an API"
          ],
          "correct": 0
        },
        {
          "question": "JavaScript is ___ compiled",
          "answers": [
            "Ahead of Time",
            "not",
            "Just in Time",
            "I don't know"
          ],
          "correct": 2
        },
        {
          "question": "The call stack uses a ______ principle data structure",
          "answers": [
            "First in last out",
            "Last in last out",
            "First in first out",
            "Last in first out"
          ],
          "correct": 3
        },
        {
          "question": "Which of these is NOT part of the event loop:",
          "answers": [
            "Call Stack",
            "Callback Queue",
            "Heap",
            "Event List"
          ],
          "correct": 3
        },
        {
          "question": "What makes a data structure in JavaScript iterable?",
          "answers": [
            "When it implements a method with a [Symbol.iterator] key.",
            "When you loop through it",
            "When you define a generator method",
            "You can't make your own iterable objects"
          ],
          "correct": 0
        },
        {
          "question": "What does Function.prototype.bind return?",
          "answers": [
            "The same function with a permanent this context",
            "A new function with a permanent this context",
            "undefined",
            "The function it was called off of"
          ],
          "correct": 1
        },
        {
          "question": "What should you return at the end of a constructor function?",
          "answers": [
            "An empty object to fill the properties with",
            "this",
            "An empty return statement",
            "Nothing, when called with new it will implicitly return this"
          ],
          "correct": 3
        },
        {
          "question": "What is the difference between an ES5 constructor function and ES6 class?",
          "answers": [
            "Constructor functions are not supported in older browsers",
            "Classes don't hoist",
            "Constructor functions don't hoist",
            "There is no difference"
          ],
          "correct": 1
        },
        {
          "question": "typeof null:",
          "answers": [
            "'object'",
            "'null'",
            "'undefined'",
            "A syntax error"
          ],
          "correct": 0
        },
        {
          "question": "typeof null:",
          "answers": [
            "'object'",
            "'null'",
            "'undefined'",
            "A syntax error"
          ],
          "correct": 0
        }
      ]
    }
  }
}
