{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine.ts","webpack:///./src/entities/observer.ts","webpack:///./src/helpers/sprite.ts","webpack:///./src/helpers/task.ts","webpack:///./src/helpers/task-queue.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/helpers/animator.ts","webpack:///./src/helpers/npc.ts","webpack:///./src/helpers/delay.ts","webpack:///./src/entities/player.ts","webpack:///./src/entities/camera.ts","webpack:///./src/data/index.ts","webpack:///./src/entities/level.ts","webpack:///./src/entities/input.ts","webpack:///./src/entities/npc-manager.ts","webpack:///./src/entities/dialogue.ts","webpack:///./src/entities/battle/battle-component.ts","webpack:///./src/entities/battle/hp.ts","webpack:///./src/entities/battle/ui.ts","webpack:///./src/entities/battle/player-ui.ts","webpack:///./src/entities/battle/enemy-ui.ts","webpack:///./src/entities/battle/fighter.ts","webpack:///./src/entities/battle/player-fighter.ts","webpack:///./src/entities/battle/enemy-fighter.ts","webpack:///./src/entities/battle/backdrop.ts","webpack:///./src/entities/battle/arena.ts","webpack:///./src/entities/battle/index.ts","webpack:///./src/entities/battle/battle.ts","webpack:///./src/entities/transition.ts","webpack:///./src/entities/sound.ts","webpack:///./src/entities/loading-screen.ts","webpack:///./src/index.ts","webpack:///./src/game.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Engine","constructor","taskQueue","this","_observers","_intervalId","_taskQueue","addObserver","observer","push","removeObserver","filter","loop","isTaskAvailable","forEach","update","currentTask","endCurrentTask","start","window","setInterval","stop","clearInterval","init","Observer","task","_acceptedTasks","has","handleUpdate","Sprite","path","grid","sheet","width","height","Promise","resolve","reject","image","Image","src","onload","onerror","imageWidth","imageHeight","loadImageData","columns","rows","x","Task","action","TaskQueue","_tasks","addTask","shift","Animation","speed","getAnimatedElement","_name","_sheet","_speed","_animatedElement","play","spriteCounter","length","y","style","backgroundPosition","Animator","animatedElement","_animations","addAnimation","animation","Error","NPC","currentFacingPosition","sprite","_currentFacingPosition","domElement","hasBattled","handleMovement","direction","left","top","npcPositionOnDOM","up","down","right","setNPCPositionOnDom","ejectFromDom","remove","faceTowardsPlayer","setFacingPosition","Number","substring","setFacingPositions","_npcFacingPositions","createElement","element","document","backgroundImage","backgroundRepeat","position","transition","setInitialPositionOnDom","startingPosition","positionOnDOM","_position","Delay","time","setTimeout","Player","currentLevel","isSceneTransition","getSceneTransition","isInteraction","getInteraction","isSpaceWalkable","super","animator","_currentLevel","_storedBackgroundPositions","Set","_playerFacingPositions","handleSceneTransitionStart","handleInteraction","resetGym","getTargetedPosition","updatePositionOnDOM","playerPositionOnDOM","playerPosition","playerFacingPosition","level","setPlayerPositionOnDom","interaction","type","debug","className","dataset","toString","getElementById","append","createAnimations","Camera","backgroundElement","isDebugMode","_visibleWidth","_visibleHeight","_collisionWidth","_collisionHeight","_playerBoundaries","_isDebugMode","_player","_backgroundElement","_cameraPosition","maxLeft","maxRight","maxTop","maxBottom","selectedMovement","moveCamera","currentBackgroundPosition","backgroundPositionOnDOM","backgroundPositionX","backgroundPositionY","border","boxSizing","player","levels","home","pokemonCenter","gymEntrance","battleTower","lfzEntrance","casino","casinoRoom","homeHouse1","homeHouse2","homeHouse3","gymArena1PreBattle","gymArena2PreBattle","gymArena3PreBattle","gymArena4PreBattle","gymArena5PreBattle","gymArena1PostBattle","gymArena2PostBattle","gymArena3PostBattle","gymArena4PostBattle","gymArena5PostBattle","gymArena6","Level","root","triggerDebugView","changeGrid","changeMap","getTile","sceneTransition","isWalkable","tile","textContent","gridName","shiftBackgroundPosition","filePaths","values","map","all","loadBackgroundImages","playerSpawnPoint","backgroundSpawnPoint","Input","_isDisabled","_isWalking","_currentMode","_movementKeys","_keyTable","loading","walking","dialogue","battle","bool","handleSceneTransitionEnd","handleNPCInteractionStart","handleNPCInteractionEnd","handleBattleStart","handleBattleNavigateAnswer","handleDisableInput","handleEnableInput","handleSimulateInput","handleStartGame","handleInput","isDisabled","keyTable","startWalkingLoop","handleWalkingLogic","stopWalkingLoop","_walkingInterval","addEventListener","NPCManager","_root","_npcs","npcData","npcs","handleNPCMovement","find","npc","switchLevel","npcElements","newLevel","files","filesCombined","f","facingPosition","Dialogue","_currentDialogue","_writingIntervalId","_currentWritingText","_dialogues","dialogueData","_isShowing","containerElement","headingElement","contentElement","handleDialogue","handleNPCBattleEnd","hide","heading","content","join","text","isTrigger","Array","isArray","a","split","writeText","postBattle","preBattle","show","letter","Uzair","isShowing","bottom","opacity","container","borderRadius","backgroundColor","zIndex","fontSize","paddingLeft","headingLine","margin","padding","BattleComponent","HP","isPlayer","_health","_damage","_classBase","_movingPosition","_healthBarContainer","querySelector","_healthBar","firstElementChild","setDamageCounter","damage","reset","UI","_uiContainer","PlayerUI","_answerElements","querySelectorAll","_selectedAnswer","setCorrect","classList","add","setWrong","resetSelection","removeSelectedClass","addSelectedClass","setAnswers","answers","selectNextAnswer","selectPreviousAnswer","EnemyUI","_content","message","Fighter","_characterContainer","blinks","intervalId","PlayerFighter","EnemyFighter","_selectedBackgroundPosition","_sprite","_fighterBackgrounds","then","Brett","Scott","Dane","TimD","TimH","Sarah","Cody","Blake","set","BackDrop","_backDropElement","Arena","_arenaElement","_arenaBackgrounds","normal","rock","dirt","ghost","grass","water","psychic","ocean","ice","plant","arena","Battle","_battleData","battleData","_currentLevelQuestionData","_currentQuestions","_selectedQuestionData","_battleComponents","backdrop","enemyFighter","enemyUI","playerFighter","playerUI","playerHP","enemyHP","handleBattleEnd","handleBattle","wasLoss","delay","component","isCorrect","selectedAnswer","_currentQuestion","correct","isDead","winningMessage","losingMessage","onWin","onLoss","isLow","question","fighter","questions","generalQuestions","shuffleQuestions","background","damageToEnemy","damageToPlayer","title","openingMessage","randomNum","Math","floor","random","placeHolder","loadPlayerUI","beginQuestion","loadHealthBars","showOpeningMessage","showStartingMessage","loadEnemyUI","loadInCharacters","setupBattleBackground","setupBackdrop","Transition","_domElement","Sound","_path","_sounds","_isMuted","volume","stopAllSounds","pause","currentTime","handleToggleSound","handleBattleDamage","handleBattleHealthLow","handleSelect","handleWallBump","playMapSound","wall","select","battleDamage","lowHealth","sound","isMuted","some","doorEnter","file","isLooping","audio","Audio","onloadeddata","sounds","loadSound","reduce","LoadingScreen","_container","_message","$root","loadingScreen","engine","npcManager","camera","input","setupDOM","args","playerElement","loadNPCImages","cameraElement","dialogueElement"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","import { Observer } from './entities'\r\nimport { TaskQueue } from './helpers'\r\n\r\nexport default class Engine {\r\n  private _observers: Array<Observer>\r\n  private _intervalId: number\r\n  private _taskQueue: TaskQueue\r\n  constructor(taskQueue: TaskQueue) {\r\n    this._observers = []\r\n    this._intervalId = null\r\n    this._taskQueue = taskQueue\r\n  }\r\n  addObserver(observer: Observer): void {\r\n    this._observers.push(observer)\r\n  }\r\n  removeObserver(observer: Observer): void {\r\n    this._observers = this._observers.filter(o => o !== observer)\r\n  }\r\n  loop(): void {\r\n    if(!this._taskQueue.isTaskAvailable) return\r\n    this._observers.forEach(o => o.update(this._taskQueue.currentTask))\r\n    this._taskQueue.endCurrentTask()\r\n  }\r\n  start(): void {\r\n    this._intervalId = window.setInterval(this.loop.bind(this), 1000/60)\r\n  }\r\n  stop(): void {\r\n    clearInterval(this._intervalId)\r\n  }\r\n  init(): void {\r\n    this.start()\r\n  }\r\n}\r\n","import { Task } from \"../helpers\"\r\n\r\nexport abstract class Observer {\r\n  public _acceptedTasks: Set<string>\r\n  abstract handleUpdate (task: Task): void\r\n\r\n  update(task: Task): void {\r\n    if (!this._acceptedTasks.has(task.name)) return\r\n    this.handleUpdate(task)\r\n  }\r\n}\r\n","export class Sprite {\n  public name: string\n  public path: string\n  public grid: number[]\n  public sheet: number[][]\n  public width: number\n  public height: number\n  constructor(name: string, path: string, grid: number[]) {\n    this.name = name\n    this.path = path\n    this.grid = grid\n    this.sheet = null\n    this.width = null\n    this.height = null\n  }\n  async loadImageData(): Promise<number[]> {\n    return new Promise((resolve, reject) => {\n      const image = new Image()\n      image.src = this.path\n      image.onload = () => resolve([image.width, image.height])\n      image.onerror = reject\n    })\n  }\n  async init(): Promise<void> {\n    const [imageWidth, imageHeight] = await this.loadImageData()\n    const [columns, rows] = this.grid\n    const sheet = []\n    this.width = imageWidth / columns\n    this.height = imageHeight / rows\n    for(let x = 0; x < columns; x++) {\n      for (let i = 0; i < rows; i++) {\n        sheet.push([-(x * this.width), -(i * this.height)])\n      }\n    }\n    this.sheet = sheet\n  }\n}\n","export class Task {\r\n  public name: string\r\n  public action: any\r\n  constructor(name: string, action: any = null) {\r\n    this.name = name\r\n    this.action = action\r\n  }\r\n}\r\n","import { Task } from \"./\"\n\nexport class TaskQueue {\n  private _tasks: Array<Task>\n  constructor() {\n    this._tasks = []\n  }\n  get currentTask () {\n    return this._tasks[0] || null\n  }\n  get isTaskAvailable () {\n    return !!this._tasks[0]\n  }\n  addTask(task: Task): void {\n    this._tasks.push(task)\n  }\n  endCurrentTask(): void {\n    this._tasks.shift()\n  }\n}\n","export class Animation {\n  private _name: string\n  private _sheet: number[][]\n  private _speed: number\n  private _intervalId: number\n  private _animatedElement: HTMLElement\n  constructor(name: string, sheet: number[][], speed: number, getAnimatedElement: HTMLElement) {\n    this._name = name\n    this._sheet = sheet\n    this._speed = speed\n    this._intervalId = null\n    this._animatedElement = getAnimatedElement\n  }\n  play(): void {\n    clearInterval(this._intervalId)\n    let spriteCounter = 0\n    this._intervalId = window.setInterval(() => {\n      if(spriteCounter === this._sheet.length) return clearInterval(this._intervalId)\n      const [x, y] = this._sheet[spriteCounter]\n      this._animatedElement.style.backgroundPosition = `${x}px ${y - 24}px`\n      spriteCounter++\n    }, this._speed)\n  }\n}\n","import { Animations } from \"../interfaces/animations\"\nimport { Animation } from './animation'\n\nexport class Animator {\n  private _animations: Animations\n  private _animatedElement: HTMLElement\n  constructor(animatedElement: HTMLElement) {\n    this._animations = {}\n    this._animatedElement = animatedElement\n  }\n  get animatedElement(): HTMLElement {\n    return this._animatedElement\n  }\n  addAnimation(name: string, sheet: number[][], speed: number): void {\n    const animation = new Animation(name, sheet, speed, this.animatedElement)\n    this._animations[name] = animation\n  }\n  play(name: string): void {\n    if(!this._animations[name]) throw new Error(`Missing Animation named ${name}`)\n    this._animations[name].play()\n  }\n}\n","import { Movements, PlayerFacingPositions, Position} from \"../interfaces\";\r\nimport { Sprite } from \".\";\r\n\r\nexport class NPC {\r\n  public name: string\r\n  public sprite: Sprite\r\n  public domElement: HTMLElement\r\n  public width: number\r\n  public height: number\r\n  private hasBattled: boolean\r\n  private _position: Position\r\n  private _npcFacingPositions: PlayerFacingPositions\r\n  private _currentFacingPosition: keyof PlayerFacingPositions\r\n  constructor(\r\n    name: string,\r\n    path: string,\r\n    currentFacingPosition: keyof PlayerFacingPositions\r\n  ) {\r\n    this.name = name\r\n    this.sprite = new Sprite(name, path, [4, 1])\r\n    this._currentFacingPosition = currentFacingPosition\r\n    this.domElement = null\r\n    this.width = null\r\n    this.height = null\r\n    this.hasBattled = false\r\n  }\r\n  handleMovement(direction: keyof Movements): void {\r\n    let [left, top] = this.npcPositionOnDOM\r\n    const movements: Movements = {\r\n      up: () => top -= this.height,\r\n      down: () => top += this.height,\r\n      left: () => left -= this.width,\r\n      right: () => left += this.width\r\n    }\r\n    movements[direction]()\r\n    this.setNPCPositionOnDom(left, top)\r\n  }\r\n  ejectFromDom(): void {\r\n    this.domElement.remove()\r\n  }\r\n  faceTowardsPlayer(direction: keyof Movements) {\r\n    const oppositeDirections: object = {\r\n      up: 'down',\r\n      down: 'up',\r\n      left: 'right',\r\n      right: 'left'\r\n    }\r\n    this._currentFacingPosition = oppositeDirections[direction]\r\n    this.setFacingPosition()\r\n  }\r\n  get npcPositionOnDOM(): number[] {\r\n    const { left, top } = this.domElement.style\r\n    const newLeft = Number(left.substring(0, left.length - 2))\r\n    const newTop = Number(top.substring(0, top.length - 2))\r\n    return [newLeft, newTop]\r\n  }\r\n  setNPCPositionOnDom(x: number, y: number): void {\r\n    this.domElement.style.left = `${x}px`\r\n    this.domElement.style.top = `${y}px`\r\n  }\r\n  setFacingPositions() {\r\n    const { sheet } = this.sprite\r\n    this._npcFacingPositions = {\r\n      'up': sheet[1],\r\n      'down': sheet[0],\r\n      'right': sheet[3],\r\n      'left': sheet[2],\r\n    }\r\n  }\r\n  setFacingPosition(): void {\r\n    const [x, y] = this._npcFacingPositions[this._currentFacingPosition]\r\n    this.domElement.style.backgroundPosition = `${x}px ${y - 24}px`\r\n  }\r\n  createElement(): HTMLElement {\r\n    const element = document.createElement('div')\r\n    const { path, sheet, width, height } = this.sprite\r\n    const [[x, y]] = sheet\r\n    this.width = width\r\n    this.height = height\r\n    element.style.backgroundImage = `url('${path}')`\r\n    element.style.backgroundPosition = `${x}px ${y - 24}px`\r\n    element.style.backgroundRepeat = 'no-repeat'\r\n    element.style.width = `${width}px`\r\n    element.style.height = `${height}px`\r\n    element.style.position = 'absolute'\r\n    element.style.transition = 'left 500ms, top 500ms'\r\n    return element\r\n  }\r\n  setInitialPositionOnDom(x: number, y:number): void {\r\n    this.domElement.style.top = `${y}px`\r\n    this.domElement.style.left = `${x}px`\r\n  }\r\n  async init(startingPosition: Position, positionOnDOM: number[]): Promise<HTMLElement> {\r\n    this._position = startingPosition\r\n    const [x, y] = positionOnDOM\r\n    await this.sprite.init()\r\n    this.domElement = this.createElement()\r\n    this.setFacingPositions()\r\n    this.setFacingPosition()\r\n    this.setInitialPositionOnDom(x, y)\r\n    return this.domElement\r\n  }\r\n}\r\n","export class Delay {\r\n  static async delay(time: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, time))\r\n  }\r\n}\r\n","import { Animator, Sprite, Task, TaskQueue } from '../helpers'\r\nimport { Observer } from './'\r\nimport { Levels, Movements, PlayerFacingPositions, Position, StoredBackgroundPositions } from '../interfaces'\r\n\r\nexport class Player extends Observer {\r\n  public sprite: Sprite\r\n  public animator: Animator\r\n  public domElement: HTMLElement\r\n  public width: number\r\n  public height: number\r\n  public getSceneTransition: Function\r\n  public isSpaceWalkable: Function\r\n  public isSceneTransition: Function\r\n  public isInteraction: Function\r\n  public getInteraction: Function\r\n  private _taskQueue: TaskQueue\r\n  private _position: Position\r\n  private _playerFacingPositions: PlayerFacingPositions\r\n  private _currentLevel: keyof Levels\r\n  private _storedBackgroundPositions: StoredBackgroundPositions\r\n  private _currentFacingPosition: keyof PlayerFacingPositions\r\n  constructor(\r\n    name: string,\r\n    path: string,\r\n    grid: number[],\r\n    taskQueue: TaskQueue,\r\n    currentLevel: keyof Levels,\r\n    isSceneTransition: Function,\r\n    getSceneTransition: Function,\r\n    isInteraction: Function,\r\n    getInteraction: Function,\r\n    isSpaceWalkable: Function\r\n  ) {\r\n    super()\r\n    this.sprite = new Sprite(name, path, grid)\r\n    this.animator = null\r\n    this.domElement = null\r\n    this.width = null\r\n    this.height = null\r\n    this._taskQueue = taskQueue\r\n    this._currentLevel = currentLevel\r\n    this._storedBackgroundPositions = {}\r\n    this._acceptedTasks = new Set(['movement', 'scene-transition-start', 'interaction'])\r\n    this._position = null\r\n    this._playerFacingPositions = null\r\n    this._currentFacingPosition = 'down'\r\n    this.getSceneTransition = getSceneTransition\r\n    this.isSpaceWalkable = isSpaceWalkable\r\n    this.isSceneTransition = isSceneTransition\r\n    this.isInteraction = isInteraction\r\n    this.getInteraction = getInteraction\r\n  }\r\n  handleUpdate({name, action}: Task): void {\r\n    if(!this._acceptedTasks.has(name)) return\r\n    switch(name) {\r\n      case 'movement':\r\n        this.handleMovement(action as keyof Movements)\r\n      break\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n      break\r\n      case 'interaction':\r\n        this.handleInteraction()\r\n      break\r\n    }\r\n  }\r\n  resetGym(): void {\r\n    [\r\n      'gymEntrance',\r\n      'gymArena1PreBattle',\r\n      'gymArena2PreBattle',\r\n      'gymArena3PreBattle',\r\n      'gymArena4PreBattle',\r\n      'gymArena5PreBattle',\r\n      'gymArena1PostBattle',\r\n      'gymArena2PostBattle',\r\n      'gymArena3PostBattle',\r\n      'gymArena4PostBattle',\r\n      'gymArena5PostBattle',\r\n      'gymArena6'\r\n    ].forEach(l => delete this._storedBackgroundPositions[l])\r\n  }\r\n  getTargetedPosition(direction: keyof Movements): Position {\r\n    const position: Position = { ...this._position }\r\n    const movements: Movements = {\r\n      up: p => p.y--,\r\n      down: p => p.y++,\r\n      left: p => p.x--,\r\n      right: p => p.x++\r\n    }\r\n    movements[direction](position)\r\n    return position\r\n  }\r\n  handleMovement(direction: keyof Movements): void {\r\n    const position = this.getTargetedPosition(direction)\r\n    const { x, y } = position\r\n    this.setFacingPosition(direction)\r\n    if(this.isSpaceWalkable(x, y)) {\r\n      this.animator.play(direction)\r\n      this._position = position\r\n      this.updatePositionOnDOM(direction)\r\n      if(this.isSceneTransition(x, y)) {\r\n        this._taskQueue.addTask(\r\n          new Task(\r\n            'scene-transition-start',\r\n            this.getSceneTransition(x, y)\r\n          )\r\n        )\r\n      }\r\n    } else {\r\n      this._taskQueue.addTask(new Task('wall-bump'))\r\n    }\r\n  }\r\n  handleSceneTransitionStart(action: any) {\r\n    this._storedBackgroundPositions[this._currentLevel] = this.playerPositionOnDOM\r\n    this._storedBackgroundPositions[this._currentLevel]\r\n    const {\r\n      playerPositionOnDOM,\r\n      playerPosition,\r\n      playerFacingPosition,\r\n      level\r\n    } = action\r\n    this._currentLevel = level\r\n    const [x, y] = this._storedBackgroundPositions[this._currentLevel]\r\n                    || playerPositionOnDOM\r\n    this.setFacingPosition(playerFacingPosition)\r\n    this._position = playerPosition\r\n    this.setPlayerPositionOnDom(x, y)\r\n    if(level === 'home') this.resetGym()\r\n  }\r\n  handleInteraction(): void {\r\n    const { x, y } = this.getTargetedPosition(this._currentFacingPosition)\r\n    if(!this.isInteraction(x, y)) return\r\n    const interaction = this.getInteraction(x, y)\r\n    this._taskQueue.addTask(new Task(\r\n      `${interaction.type}-interaction-start`,\r\n      {\r\n        playerFacingPosition: this._currentFacingPosition,\r\n        ...interaction\r\n      }\r\n    ))\r\n  }\r\n  updatePositionOnDOM(direction: keyof Movements): void {\r\n    let [ left, top ] = this.playerPositionOnDOM\r\n    const movements: Movements = {\r\n      up: () => top -= this.height,\r\n      down: () => top += this.height,\r\n      left: () => left -= this.width,\r\n      right: () => left += this.width\r\n    }\r\n    movements[direction]()\r\n    this.setPlayerPositionOnDom(left, top)\r\n  }\r\n  setFacingPosition(direction: keyof PlayerFacingPositions): void {\r\n    this._currentFacingPosition = direction\r\n    const [x, y] = this._playerFacingPositions[direction]\r\n    this.domElement.style.backgroundPosition = `${x}px ${y - 24}px`\r\n  }\r\n  get playerPositionOnDOM(): number[] {\r\n    const { left, top } = this.domElement.style\r\n    const newLeft = Number(left.substring(0, left.length - 2))\r\n    const newTop = Number(top.substring(0, top.length - 2))\r\n    return [newLeft, newTop]\r\n  }\r\n  setPlayerPositionOnDom(x: number, y:number): void {\r\n    this.domElement.style.left = `${x}px`\r\n    this.domElement.style.top = `${y}px`\r\n  }\r\n  setInitialPositionOnDom(): void {\r\n    const { x, y } = this._position\r\n    this.domElement.style.top = `${y * this.height}px`\r\n    this.domElement.style.left = `${x * this.width}px`\r\n  }\r\n  createElement(): HTMLElement {\r\n    const element = document.createElement('div')\r\n    const { path, sheet, width, height } = this.sprite\r\n    const [[x, y]] = sheet\r\n    this.width = width\r\n    this.height = height\r\n    element.style.backgroundImage = `url('${path}')`\r\n    element.style.backgroundPosition = `${x}px ${y - 24}px`\r\n    element.style.backgroundRepeat = 'no-repeat'\r\n    element.style.width = `${width}px`\r\n    element.style.height = `${height}px`\r\n    element.style.position = 'absolute'\r\n    element.style.transition = 'left 500ms, top 500ms'\r\n    return element\r\n  }\r\n  debug(x: number, y: number): void{\r\n    const element = document.createElement('div')\r\n    element.className = 'space'\r\n    element.dataset.x = x.toString()\r\n    element.dataset.y = y.toString()\r\n    element.style.top = `${y * this.height}px`\r\n    element.style.left = `${x * this.width}px`\r\n    document.getElementById('root').append(element)\r\n  }\r\n  createAnimations(): void {\r\n    const { sheet } = this.sprite\r\n    this.animator = new Animator(this.domElement)\r\n    this.animator.addAnimation(\r\n      'down',\r\n      [\r\n        sheet[1],\r\n        sheet[2],\r\n        sheet[0],\r\n      ],\r\n      50,\r\n    )\r\n    this.animator.addAnimation(\r\n      'up',\r\n      [\r\n        sheet[7],\r\n        sheet[8],\r\n        sheet[6],\r\n      ],\r\n      50,\r\n    )\r\n    this.animator.addAnimation(\r\n      'left',\r\n      [\r\n        sheet[13],\r\n        sheet[14],\r\n        sheet[12],\r\n      ],\r\n      50,\r\n    )\r\n    this.animator.addAnimation(\r\n      'right',\r\n      [\r\n        sheet[19],\r\n        sheet[20],\r\n        sheet[18],\r\n      ],\r\n      50,\r\n    )\r\n  }\r\n  setFacingPositions() {\r\n    const { sheet } = this.sprite\r\n    this._playerFacingPositions = {\r\n      'up': sheet[6],\r\n      'down': sheet[0],\r\n      'right': sheet[18],\r\n      'left': sheet[12],\r\n    }\r\n  }\r\n  async init(startingPosition: Position): Promise<HTMLElement> {\r\n    this._position = startingPosition\r\n    await this.sprite.init()\r\n    this.domElement = this.createElement()\r\n    this.setFacingPositions()\r\n    this.createAnimations()\r\n    this.setInitialPositionOnDom()\r\n    return this.domElement\r\n  }\r\n}\r\n","import { Sprite, Task, TaskQueue } from '../helpers'\r\nimport { Observer } from './'\r\nimport { Levels, Movements, Position, StoredBackgroundPositions } from '../interfaces'\r\nimport { Player } from './player'\r\n\r\nexport class Camera extends Observer {\r\n  private _visibleWidth: number\r\n  private _visibleHeight: number\r\n  private _collisionWidth: number\r\n  private _collisionHeight: number\r\n  private _playerBoundaries: number[]\r\n  private _isDebugMode: boolean\r\n  private _player: Player\r\n  private _backgroundElement: HTMLElement\r\n  private _cameraPosition: number[]\r\n  private _taskQueue: TaskQueue\r\n  private _currentLevel: keyof Levels\r\n  private _storedBackgroundPositions: StoredBackgroundPositions\r\n  public domElement: HTMLElement\r\n  constructor(\r\n    taskQueue: TaskQueue,\r\n    width: number,\r\n    height: number,\r\n    backgroundElement: HTMLElement,\r\n    currentLevel: keyof Levels,\r\n    isDebugMode: boolean = false\r\n  ) {\r\n    super()\r\n    this._taskQueue = taskQueue\r\n    this._storedBackgroundPositions = {}\r\n    this._currentLevel = currentLevel\r\n    this._acceptedTasks = new Set(['movement', 'scene-transition-start'])\r\n    this._visibleWidth = width\r\n    this._visibleHeight = height\r\n    this._collisionWidth = width / 10 * 8\r\n    this._collisionHeight = height / 10 * 6\r\n    this._playerBoundaries = [512, 96, 256, 128]\r\n    this._isDebugMode = isDebugMode\r\n    this._player = null\r\n    this._backgroundElement = backgroundElement\r\n    this._cameraPosition = [0, 0]\r\n    this.domElement = null\r\n  }\r\n  handleUpdate({ name, action }: Task): void {\r\n    switch (name) {\r\n      case 'movement':\r\n        this.handleMovement()\r\n      break\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n      break\r\n    }\r\n  }\r\n  resetGym(): void {\r\n    [\r\n      'gymEntrance',\r\n      'gymArena1PreBattle',\r\n      'gymArena2PreBattle',\r\n      'gymArena3PreBattle',\r\n      'gymArena4PreBattle',\r\n      'gymArena5PreBattle',\r\n      'gymArena1PostBattle',\r\n      'gymArena2PostBattle',\r\n      'gymArena3PostBattle',\r\n      'gymArena4PostBattle',\r\n      'gymArena5PostBattle',\r\n      'gymArena6',\r\n    ].forEach(l => delete this._storedBackgroundPositions[l])\r\n  }\r\n  handleMovement(): void {\r\n    const [ left, top ] = this._player.playerPositionOnDOM\r\n    const [ maxLeft, maxRight, maxTop, maxBottom] = this._playerBoundaries\r\n    let selectedMovement: keyof Movements = null\r\n    if(left > maxLeft) {\r\n      selectedMovement = 'left'\r\n    } else if(left < maxRight) {\r\n      selectedMovement = 'right'\r\n    } else if (top >= maxTop) {\r\n      selectedMovement = 'up'\r\n    } else if( top < maxBottom) {\r\n      selectedMovement = 'down'\r\n    }\r\n    if(!selectedMovement) return\r\n    this._player.updatePositionOnDOM(selectedMovement)\r\n    this.moveCamera(selectedMovement)\r\n    this._taskQueue.addTask(new Task('npc-movement', selectedMovement))\r\n  }\r\n  handleSceneTransitionStart(action: any) {\r\n    this._storedBackgroundPositions[this._currentLevel] = this.currentBackgroundPosition\r\n    const {\r\n      backgroundPositionOnDOM,\r\n      level\r\n    } = action\r\n    this._currentLevel = level\r\n    this._cameraPosition = this._storedBackgroundPositions[this._currentLevel]\r\n                            || backgroundPositionOnDOM\r\n    this.updatePositionOnDOM()\r\n    if(level === 'home') this.resetGym()\r\n  }\r\n  moveCamera(direction: keyof Movements): void {\r\n    const { width, height } = this._player\r\n    let [ x, y ] = this._cameraPosition\r\n    const movements: Movements = {\r\n      up: () => y -= height,\r\n      down: () => y += height,\r\n      left: () => x -= width,\r\n      right: () => x += width\r\n    }\r\n    movements[direction]()\r\n    this._cameraPosition = [ x, y ]\r\n    this.updatePositionOnDOM()\r\n  }\r\n  updatePositionOnDOM(): void {\r\n    const [x, y] = this._cameraPosition\r\n    this._backgroundElement.style.backgroundPosition = `${x}px ${y}px`\r\n  }\r\n  get currentBackgroundPosition(): number[] {\r\n    const { backgroundPositionX , backgroundPositionY } = this._backgroundElement.style\r\n    const x = Number(backgroundPositionX.substring(0, backgroundPositionX.length - 2))\r\n    const y = Number(backgroundPositionY.substring(0, backgroundPositionY.length - 2))\r\n    return [x, y]\r\n  }\r\n  createElement(): HTMLElement {\r\n    const element = document.createElement('div')\r\n    element.style.width = `${this._collisionWidth}px`\r\n    element.style.height = `${this._collisionHeight}px`\r\n    element.style.position = 'absolute'\r\n    if(this._isDebugMode) {\r\n      element.style.border = '2px solid red'\r\n      element.style.boxSizing = 'border-box'\r\n    }\r\n    return element\r\n  }\r\n  init(player: Player): HTMLElement {\r\n    this._player = player\r\n    this.domElement = this.createElement()\r\n    return this.domElement\r\n  }\r\n}\r\n","import home from './home.json'\r\nimport pokemonCenter from './pokemon-center.json'\r\nimport gymEntrance from './gym-entrance.json'\r\nimport battleTower from './battle-tower.json'\r\nimport lfzEntrance from './lfz-entrance.json'\r\nimport casino from './casino.json'\r\nimport casinoRoom from './casino-room.json'\r\nimport homeHouse1 from './home-house-1.json'\r\nimport homeHouse2 from './home-house-2.json'\r\nimport homeHouse3 from './home-house-3.json'\r\nimport gymArena1PreBattle from './gym-arena-1-pre-battle.json'\r\nimport gymArena2PreBattle from './gym-arena-2-pre-battle.json'\r\nimport gymArena3PreBattle from './gym-arena-3-pre-battle.json'\r\nimport gymArena4PreBattle from './gym-arena-4-pre-battle.json'\r\nimport gymArena5PreBattle from './gym-arena-5-pre-battle.json'\r\nimport gymArena1PostBattle from './gym-arena-1-post-battle.json'\r\nimport gymArena2PostBattle from './gym-arena-2-post-battle.json'\r\nimport gymArena3PostBattle from './gym-arena-3-post-battle.json'\r\nimport gymArena4PostBattle from './gym-arena-4-post-battle.json'\r\nimport gymArena5PostBattle from './gym-arena-5-post-battle.json'\r\nimport gymArena6 from './gym-arena-6.json'\r\nimport npcData from './npc.json'\r\nimport dialogueData from './dialogue.json'\r\nimport generalQuestions from './general-questions.json'\r\nimport battleData from './battle.json'\r\n\r\nconst levels = {\r\n  home,\r\n  pokemonCenter,\r\n  gymEntrance,\r\n  battleTower,\r\n  lfzEntrance,\r\n  casino,\r\n  casinoRoom,\r\n  homeHouse1,\r\n  homeHouse2,\r\n  homeHouse3,\r\n  gymArena1PreBattle,\r\n  gymArena2PreBattle,\r\n  gymArena3PreBattle,\r\n  gymArena4PreBattle,\r\n  gymArena5PreBattle,\r\n  gymArena1PostBattle,\r\n  gymArena2PostBattle,\r\n  gymArena3PostBattle,\r\n  gymArena4PostBattle,\r\n  gymArena5PostBattle,\r\n  gymArena6\r\n}\r\n\r\nexport {\r\n  levels,\r\n  npcData,\r\n  dialogueData,\r\n  battleData,\r\n  generalQuestions\r\n}\r\n","import { levels } from '../data'\r\nimport { Observer } from '.'\r\nimport { Task } from '../helpers'\r\nimport { Interaction, Position, SceneTransition, Tile } from '../interfaces'\r\n\r\nexport class Level extends Observer {\r\n  public root: HTMLElement\r\n  public name: string\r\n  public grid: any\r\n  constructor(name: string, root: HTMLElement, isDebugMode: boolean = false) {\r\n    super()\r\n    this._acceptedTasks = new Set(['scene-transition-start'])\r\n    this.root = root\r\n    this.name = name\r\n    this.grid = levels[name]\r\n    if(isDebugMode) {\r\n      this.triggerDebugView()\r\n    }\r\n  }\r\n  handleUpdate({ name, action}: Task): void {\r\n    switch(name) {\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n      break;\r\n    }\r\n  }\r\n  handleSceneTransitionStart(action: any) {\r\n    const {\r\n      level,\r\n    } = action\r\n    this.changeGrid(level)\r\n    const { path } = this.grid\r\n    this.changeMap(path)\r\n  }\r\n  getTile(x: number, y:number): Tile {\r\n    return this.grid[`${x}/${y}`]\r\n  }\r\n  getSceneTransition(x: number, y:number): SceneTransition {\r\n    return this.getTile(x, y).sceneTransition\r\n  }\r\n  getInteraction(x: number, y: number): Interaction {\r\n    return this.getTile(x, y).interaction\r\n  }\r\n  isSpaceWalkable(x: number, y: number): boolean {\r\n    if(!this.getTile(x, y)) return false\r\n    return this.getTile(x, y).isWalkable\r\n  }\r\n  isSceneTransition(x: number, y: number): boolean {\r\n    if (!this.getTile(x, y)) return false\r\n    return !!this.getTile(x, y).sceneTransition\r\n  }\r\n  isInteraction(x: number, y: number): boolean {\r\n    if (!this.getTile(x, y)) return false\r\n    return !!this.getTile(x, y).interaction\r\n  }\r\n  triggerDebugView(): void {\r\n    for(const tile in this.grid) {\r\n      const { x, y, isWalkable} = this.grid[tile]\r\n      const element = document.createElement('div')\r\n      element.className = 'space'\r\n      element.style.top = `${y * 64}px`\r\n      element.style.left = `${x * 32}px`\r\n      element.textContent = `${x}/${y}`\r\n      if(isWalkable) {\r\n        element.style.border = '2px solid green'\r\n      } else {\r\n        element.style.border = '2px solid red'\r\n      }\r\n      this.root.append(element)\r\n    }\r\n    this.root.style.width = '1920px'\r\n    this.root.style.height = '1280px'\r\n  }\r\n  changeMap(path: string): void {\r\n    this.root.style.backgroundImage = `url('${path}')`\r\n  }\r\n  changeGrid(gridName: string): void {\r\n    this.grid = levels[gridName]\r\n  }\r\n  shiftBackgroundPosition(x: number, y:number) {\r\n    this.root.style.backgroundPosition = `${x}px ${y}px`\r\n  }\r\n  async loadBackgroundImages(): Promise<void> {\r\n    const filePaths = Object.values(levels).map((l: any) => l.path)\r\n    await Promise.all(filePaths.map(path => {\r\n      return new Promise((resolve, reject) => {\r\n        const image = new Image()\r\n        image.onload = resolve\r\n        image.onerror = reject\r\n        image.src = path\r\n      })\r\n    }))\r\n  }\r\n  async init(): Promise<Position> {\r\n    await this.loadBackgroundImages()\r\n    const { path, playerSpawnPoint, backgroundSpawnPoint} = this.grid\r\n    const [x, y] = backgroundSpawnPoint\r\n    this.changeMap(path)\r\n    this.shiftBackgroundPosition(x, y)\r\n    return playerSpawnPoint\r\n  }\r\n}\r\n","import { Task, TaskQueue } from \"../helpers\";\r\nimport { KeyTable } from '../interfaces'\r\nimport { Observer } from \"./\";\r\nexport class Input extends Observer {\r\n  private _isDisabled: boolean\r\n  private _currentMode: keyof KeyTable\r\n  private _movementKeys: Set<string>\r\n  private _taskQueue: TaskQueue\r\n  private _keyTable: KeyTable\r\n  private _walkingInterval: number\r\n  private _isWalking: boolean\r\n  constructor(taskQueue: TaskQueue) {\r\n    super()\r\n    this._isDisabled = true\r\n    this._isWalking = false\r\n    this._acceptedTasks = new Set([\r\n      'npc-interaction-start',\r\n      'npc-interaction-end',\r\n      'scene-transition-start',\r\n      'scene-transition-end',\r\n      'battle-start',\r\n      'battle-navigate-answer',\r\n      'disable-input',\r\n      'enable-input',\r\n      'simulate-input',\r\n      'start-game'\r\n    ])\r\n    this._currentMode = 'loading'\r\n    this._taskQueue = taskQueue\r\n    this._movementKeys = new Set(['w', 'a', 's', 'd'])\r\n    this._keyTable = {\r\n      loading: {\r\n        ' ': ['start-game', null]\r\n      },\r\n      walking: {\r\n        'w': ['movement', 'up'],\r\n        'a': ['movement', 'left'],\r\n        's': ['movement', 'down'],\r\n        'd': ['movement', 'right'],\r\n        ' ': ['interaction', null],\r\n        'm': ['toggle-sound', null]\r\n      },\r\n      dialogue: {\r\n        ' ': ['dialogue', null],\r\n        'm': ['toggle-sound', null]\r\n      },\r\n      battle: {\r\n        'w': ['battle', 'selectPreviousAnswer'],\r\n        's': ['battle', 'selectNextAnswer'],\r\n        ' ': ['battle', null],\r\n        'm': ['toggle-sound', null]\r\n      }\r\n    }\r\n  }\r\n  get isDisabled(): boolean {\r\n    return this._isDisabled\r\n  }\r\n  set isDisabled(bool: boolean) {\r\n    this._isDisabled = bool\r\n  }\r\n  handleUpdate({ name, action }: Task): void {\r\n    switch (name) {\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart()\r\n      break\r\n      case 'scene-transition-end':\r\n        this.handleSceneTransitionEnd()\r\n      break\r\n      case 'npc-interaction-start':\r\n        this.handleNPCInteractionStart()\r\n      break\r\n      case 'npc-interaction-end':\r\n        this.handleNPCInteractionEnd()\r\n      break\r\n      case 'battle-start':\r\n        this.handleBattleStart()\r\n      break\r\n      case 'battle-navigate-answer':\r\n        this.handleBattleNavigateAnswer()\r\n      break\r\n      case 'disable-input':\r\n        this.handleDisableInput()\r\n      break\r\n      case 'enable-input':\r\n        this.handleEnableInput()\r\n      break\r\n      case 'simulate-input':\r\n        this.handleSimulateInput(action)\r\n        break\r\n      case 'start-game':\r\n        this.handleStartGame()\r\n        break\r\n    }\r\n  }\r\n  handleStartGame(): void {\r\n    this._currentMode = 'walking'\r\n  }\r\n  handleSimulateInput(key: string) {\r\n    this.handleInput({ key } as KeyboardEvent)\r\n  }\r\n  handleDisableInput() {\r\n    this.isDisabled = true\r\n  }\r\n  handleEnableInput() {\r\n    this.isDisabled = false\r\n  }\r\n  handleBattleNavigateAnswer(): void {\r\n    this.isDisabled = false\r\n    this._currentMode = 'battle'\r\n  }\r\n  handleBattleStart() {\r\n    this.isDisabled = true\r\n  }\r\n  handleNPCInteractionEnd() {\r\n    this._currentMode = 'walking'\r\n  }\r\n  handleNPCInteractionStart(): void {\r\n    this._currentMode = 'dialogue'\r\n  }\r\n  handleSceneTransitionStart(): void {\r\n    this.isDisabled = true\r\n  }\r\n  handleSceneTransitionEnd(): void {\r\n    this.isDisabled = false\r\n  }\r\n  handleInput({ key }: KeyboardEvent): void {\r\n    if(this.isDisabled) return\r\n    const keyTable = this._keyTable[this._currentMode]\r\n    if(!keyTable[key]) return\r\n    const [ name, action ] = keyTable[key]\r\n    if(name === 'movement' && this._isWalking) return\r\n    this._taskQueue.addTask(new Task(name, action))\r\n    if (name === 'movement') this.startWalkingLoop(name, action)\r\n  }\r\n  handleWalkingLogic({ key }: KeyboardEvent) {\r\n    if(this._movementKeys.has(key)) {\r\n      this.stopWalkingLoop()\r\n    }\r\n  }\r\n  startWalkingLoop(name: any, action: any) {\r\n    this._isWalking = true\r\n    this._walkingInterval = window.setInterval(() => {\r\n      if(this.isDisabled) return this.stopWalkingLoop()\r\n      this._taskQueue.addTask(new Task(name, action))\r\n    }, 200)\r\n  }\r\n  stopWalkingLoop() {\r\n    clearInterval(this._walkingInterval)\r\n    this._isWalking = false\r\n  }\r\n  init(): void {\r\n    window.addEventListener('keydown', this.handleInput.bind(this))\r\n    window.addEventListener('keyup', this.handleWalkingLogic.bind(this))\r\n    this.isDisabled = false\r\n  }\r\n}\r\n","import { NPC, Sprite, Task } from '../helpers'\r\nimport { npcData } from '../data'\r\nimport { Observer } from './'\r\nimport { Movements, NPCList, Position, SceneTransition } from '../interfaces'\r\n\r\nexport class NPCManager extends Observer {\r\n  private _currentLevel: string\r\n  private _root: HTMLElement\r\n  private _npcs: NPCList\r\n  private npcData: any\r\n  constructor(\r\n    currentLevel: string,\r\n    root: HTMLElement\r\n  ) {\r\n    super()\r\n    this._root = root\r\n    this._currentLevel = currentLevel\r\n    this._npcs = {}\r\n    this.npcData = npcData[currentLevel]\r\n    this._acceptedTasks = new Set(['npc-movement', 'npc-interaction-start', 'scene-transition-start'])\r\n  }\r\n  get npcs(): NPC[] {\r\n    return this._npcs[this._currentLevel]\r\n  }\r\n  set npcs(npcs: NPC[]) {\r\n    this._npcs[this._currentLevel] = npcs\r\n  }\r\n  handleUpdate({name, action}: Task): void {\r\n    switch (name) {\r\n      case 'npc-movement':\r\n        this.handleNPCMovement(action as keyof Movements)\r\n      break\r\n      case 'npc-interaction-start':\r\n        this.handleNPCInteractionStart(action)\r\n      break\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n      break\r\n    }\r\n  }\r\n  resetGym(): void {\r\n    [\r\n      'gymEntrance',\r\n      'gymArena1PreBattle',\r\n      'gymArena2PreBattle',\r\n      'gymArena3PreBattle',\r\n      'gymArena4PreBattle',\r\n      'gymArena5PreBattle',\r\n      'gymArena1PostBattle',\r\n      'gymArena2PostBattle',\r\n      'gymArena3PostBattle',\r\n      'gymArena4PostBattle',\r\n      'gymArena5PostBattle',\r\n      'gymArena6'\r\n    ].forEach(l => delete this._npcs[l])\r\n  }\r\n  handleNPCInteractionStart(action: any): void {\r\n    const { name, playerFacingPosition } = action\r\n    const npc = this.npcs.find(npc => npc.name === name)\r\n    npc.faceTowardsPlayer(playerFacingPosition)\r\n  }\r\n  handleNPCMovement(direction: keyof Movements): void {\r\n    this.npcs.forEach(npc => npc.handleMovement(direction))\r\n  }\r\n  async handleSceneTransitionStart({ level }: SceneTransition): Promise<void> {\r\n    this.npcs.forEach(npc => npc.ejectFromDom())\r\n    this.switchLevel(level)\r\n    let npcElements = null\r\n    if(!this.npcs) {\r\n      npcElements = await this.init()\r\n    } else {\r\n      npcElements = this.npcs.map(npc => npc.domElement)\r\n    }\r\n    this._root.append(...npcElements)\r\n    if (level === 'home') this.resetGym()\r\n\r\n  }\r\n  switchLevel(newLevel: string) {\r\n    this.npcData = npcData[newLevel] || []\r\n    this._currentLevel = newLevel\r\n  }\r\n  async loadNPCImages(): Promise<void> {\r\n    const files = Object.values(npcData)\r\n    const filesCombined: {\r\n      path: string\r\n    }[] = []\r\n    files.forEach(f => filesCombined.push(...f))\r\n    const filePaths = filesCombined.map(n => n.path)\r\n    await Promise.all(filePaths.map(path => {\r\n      return new Promise((resolve, reject) => {\r\n        const image = new Image()\r\n        image.onload = resolve\r\n        image.onerror = reject\r\n        image.src = path\r\n      })\r\n    }))\r\n  }\r\n  async init(): Promise<Array<HTMLElement>> {\r\n    const npcs: NPC[] = []\r\n    const npcElements = []\r\n    for(let i = 0; i < this.npcData.length; i++) {\r\n      const { path, startingPosition, facingPosition, positionOnDOM, name } = this.npcData[i]\r\n      const npcData: NPC = new NPC(name, path, facingPosition)\r\n      const element = await npcData.init(startingPosition, positionOnDOM)\r\n      npcs.push(npcData)\r\n      npcElements.push(element)\r\n    }\r\n    this.npcs = npcs\r\n    return npcElements\r\n  }\r\n}\r\n","import { Task, TaskQueue } from '../helpers'\r\nimport { DialogueData, Interaction, Levels, SceneTransition } from '../interfaces'\r\nimport { Observer } from './'\r\nimport { dialogueData } from '../data'\r\n\r\nexport class Dialogue extends Observer {\r\n  private _currentLevel: keyof Levels\r\n  private _dialogues: {\r\n    hasBattled?: boolean\r\n    preBattle?: DialogueData[]\r\n    postBattle?: DialogueData[]\r\n  }\r\n  private _currentDialogue: DialogueData[]\r\n  private _taskQueue: TaskQueue\r\n  private _writingIntervalId: number\r\n  private _currentWritingText: string[]\r\n  public containerElement: HTMLElement\r\n  public headingElement: HTMLElement\r\n  public contentElement: HTMLElement\r\n  private _isShowing: boolean\r\n  constructor(taskQueue: TaskQueue, currentLevel: keyof Levels) {\r\n    super()\r\n    this._acceptedTasks = new Set(['npc-interaction-start', 'scene-transition-start', 'dialogue', 'npc-interaction-end', 'battle-start', 'npc-battle-end'])\r\n    this._currentLevel = currentLevel\r\n    this._currentDialogue = []\r\n    this._writingIntervalId = null\r\n    this._currentWritingText = []\r\n    this._taskQueue = taskQueue\r\n    this._dialogues = dialogueData[currentLevel]\r\n    this._isShowing = false\r\n    this.containerElement = null\r\n    this.headingElement = null\r\n    this.contentElement = null\r\n  }\r\n  handleUpdate({ name, action }: Task): void {\r\n    switch (name) {\r\n      case 'npc-interaction-start':\r\n        this.handleNPCInteractionStart(action)\r\n      break\r\n      case 'npc-interaction-end':\r\n        this.handleNPCInteractionEnd()\r\n        break\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n      break\r\n      case 'dialogue':\r\n        this.handleDialogue()\r\n      break\r\n      case 'battle-start':\r\n        this.handleNPCInteractionEnd()\r\n      break\r\n      case 'npc-battle-end':\r\n        this.handleNPCBattleEnd(action)\r\n      break\r\n    }\r\n  }\r\n  handleNPCBattleEnd({ name, level}: any): void {\r\n    dialogueData[level][name].hasBattled = true\r\n  }\r\n  handleNPCInteractionEnd() {\r\n    this.hide()\r\n    this.heading = ''\r\n    this.content = ''\r\n    this._currentWritingText = []\r\n  }\r\n  handleDialogue(): void {\r\n    if(this._currentWritingText.length) {\r\n      clearInterval(this._writingIntervalId)\r\n      this.content = this.content + this._currentWritingText.join('')\r\n      this._currentWritingText = []\r\n      return\r\n    }\r\n    const { text, isTrigger, type, action } = this._currentDialogue.shift()\r\n    if(isTrigger) {\r\n      if(Array.isArray(type) || Array.isArray(action)) {\r\n        action.forEach((a: any, i: number) => {\r\n          this._taskQueue.addTask(\r\n            new Task(\r\n              type[i],\r\n              a\r\n            )\r\n          )\r\n        })\r\n      } else {\r\n        this._taskQueue.addTask(\r\n          new Task(\r\n            type,\r\n            action || null\r\n          )\r\n        )\r\n      }\r\n      return\r\n    }\r\n    this._currentWritingText = text.split('')\r\n    this.writeText()\r\n  }\r\n  handleNPCInteractionStart(action: Interaction) {\r\n    const { name } = action\r\n    const dialogue = this._dialogues[name]\r\n    this._currentDialogue = [...dialogue.hasBattled ? dialogue.postBattle : dialogue.preBattle]\r\n    const { text } = this._currentDialogue.shift()\r\n    this.heading = name\r\n    this._currentWritingText = text.split('')\r\n    this.writeText()\r\n    this.show()\r\n  }\r\n  writeText() {\r\n    this.content = ''\r\n    this._writingIntervalId = window.setInterval(() => {\r\n      if(!this._currentWritingText.length) {\r\n        clearInterval(this._writingIntervalId)\r\n        return\r\n      }\r\n      const letter = this._currentWritingText.shift()\r\n      this.content = this.content + letter\r\n    }, 50)\r\n  }\r\n  handleSceneTransitionStart({ level }: SceneTransition): void{\r\n    this._dialogues = dialogueData[level]\r\n    this._currentLevel = level\r\n    // Edge case, in too deep, need bandaid :(\r\n    if (level === 'home') dialogueData.gymArena6.Uzair.hasBattled = false\r\n  }\r\n  show(): void {\r\n    this.isShowing = true\r\n  }\r\n  hide(): void {\r\n    this.isShowing = false\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    if(this._isShowing) {\r\n      this.containerElement.style.bottom = '20px'\r\n      this.containerElement.style.opacity = '1'\r\n    } else {\r\n      this.containerElement.style.bottom = '-115px'\r\n      this.containerElement.style.opacity = '0'\r\n    }\r\n  }\r\n  set heading(text: string) {\r\n    this.headingElement.textContent = text\r\n  }\r\n  get content(): string {\r\n    return this.contentElement.textContent\r\n  }\r\n  set content(text: string) {\r\n    this.contentElement.textContent = text\r\n  }\r\n  createElement(): void {\r\n    const container = document.createElement('div')\r\n    container.style.width = '500px'\r\n    container.style.height = '120px'\r\n    container.style.bottom = '-115px'\r\n    container.style.opacity = '0'\r\n    container.style.position = 'absolute'\r\n    container.style.border = '6px solid rosybrown'\r\n    container.style.borderRadius = '6px'\r\n    container.style.backgroundColor = 'beige'\r\n    container.style.transition = 'bottom 300ms, opacity 300ms'\r\n    container.style.zIndex = '2'\r\n    const heading = document.createElement('div')\r\n    heading.style.fontSize = '18px'\r\n    heading.style.paddingLeft = '8px'\r\n    const headingLine = document.createElement('hr')\r\n    headingLine.style.margin = '2px 0'\r\n    const content = document.createElement('div')\r\n    content.style.padding = '0 8px'\r\n    container.append(\r\n      heading,\r\n      headingLine,\r\n      content\r\n    )\r\n    this.headingElement = heading\r\n    this.contentElement = content\r\n    this.containerElement = container\r\n  }\r\n  init(): HTMLElement {\r\n    this.createElement()\r\n    return this.containerElement\r\n  }\r\n}\r\n","export abstract class BattleComponent {\r\n  abstract show(): void\r\n  abstract hide(): void\r\n}\r\n","import { BattleComponent } from \".\"\r\nexport class HP extends BattleComponent{\r\n  private _health: number\r\n  private _damage: number\r\n  private _classBase: string\r\n  private _healthBarContainer: HTMLElement\r\n  private _movingPosition: string\r\n  private _isShowing: boolean\r\n  private _healthBar: HTMLElement\r\n  constructor(\r\n    isPlayer: boolean\r\n  ) {\r\n    super()\r\n    this._health = 100\r\n    this._damage = null\r\n    this._classBase = isPlayer ? 'player' : 'enemy'\r\n    this._movingPosition = isPlayer ? 'left' : 'right'\r\n    this._healthBarContainer = document.querySelector(`.${this._classBase}-health-bar-container`)\r\n    this._healthBar = <HTMLElement>this._healthBarContainer.firstElementChild\r\n    this._isShowing = false\r\n  }\r\n  setDamageCounter(damage: number) {\r\n    this._damage = damage\r\n  }\r\n  damage(): void {\r\n    if(this._health - this._damage < 0) {\r\n      this._health = 0\r\n      this._healthBar.style.height = this._health + '%'\r\n    } else {\r\n      this._health -= this._damage\r\n      this._healthBar.style.height = this._health + '%'\r\n    }\r\n  }\r\n  get isDead(): boolean {\r\n    return !this._health\r\n  }\r\n  get isLow(): boolean {\r\n    return this._health <= 10\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    if (this._isShowing) {\r\n      this._healthBarContainer.style[this._movingPosition] = '2px'\r\n    } else {\r\n      this._healthBarContainer.style[this._movingPosition] = '-26px'\r\n    }\r\n  }\r\n  show() {\r\n    this.isShowing = true\r\n  }\r\n  hide() {\r\n    this.isShowing = false\r\n  }\r\n  reset(): void {\r\n    this._health = 100\r\n    this._healthBar.style.height = this._health + '%'\r\n  }\r\n}\r\n","import { BattleComponent } from \".\"\r\n\r\nexport abstract class UI extends BattleComponent {\r\n  private _classBase: string\r\n  public _uiContainer: HTMLElement\r\n  private _movingPosition: string\r\n  private _isShowing: boolean\r\n  constructor(isPlayer: boolean) {\r\n    super()\r\n    this._classBase = isPlayer ? 'player' : 'enemy'\r\n    this._movingPosition = isPlayer ? 'right' : 'left'\r\n    this._uiContainer = document.querySelector(`.${this._classBase}-ui`)\r\n    this._isShowing = false\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    if(this._isShowing) {\r\n      this._uiContainer.style[this._movingPosition] = '2px'\r\n    } else {\r\n      this._uiContainer.style[this._movingPosition] = '-360px'\r\n    }\r\n  }\r\n  show() {\r\n    this.isShowing = true\r\n  }\r\n  hide() {\r\n    this.isShowing = false\r\n  }\r\n}\r\n","import { UI } from \".\";\r\n\r\nexport class PlayerUI extends UI {\r\n  private _answerElements: HTMLElement[]\r\n  private _selectedAnswer: number\r\n\r\n  constructor(isPlayer: boolean) {\r\n    super(isPlayer)\r\n    this._answerElements = [...this._uiContainer.querySelectorAll('[data-answer]') as any]\r\n    this._selectedAnswer = 0\r\n  }\r\n  setCorrect() {\r\n    this._answerElements[this._selectedAnswer].classList.add('correct')\r\n  }\r\n  setWrong() {\r\n    this._answerElements[this._selectedAnswer].classList.add('wrong')\r\n  }\r\n  resetSelection() {\r\n    this._answerElements.forEach(a => a.classList.remove('correct', 'wrong'))\r\n    this.removeSelectedClass()\r\n    this._selectedAnswer = 0\r\n    this.addSelectedClass()\r\n  }\r\n  setAnswers(answers: string[]) {\r\n    for(let i = 0; i < answers.length; i++) {\r\n      this._answerElements[i].textContent = answers[i]\r\n    }\r\n  }\r\n  get selectedAnswer(): number {\r\n    return this._selectedAnswer\r\n  }\r\n  selectNextAnswer() {\r\n    this.removeSelectedClass()\r\n    if(this._selectedAnswer + 1 === this._answerElements.length) {\r\n      this._selectedAnswer = 0\r\n    } else {\r\n      this._selectedAnswer++\r\n    }\r\n    this.addSelectedClass()\r\n  }\r\n  selectPreviousAnswer() {\r\n    this.removeSelectedClass()\r\n    if(this._selectedAnswer - 1 === -1) {\r\n      this._selectedAnswer = this._answerElements.length - 1\r\n    } else {\r\n      this._selectedAnswer--\r\n    }\r\n    this.addSelectedClass()\r\n  }\r\n  removeSelectedClass() {\r\n    this._answerElements[this._selectedAnswer].classList.remove('selected')\r\n  }\r\n  addSelectedClass() {\r\n    this._answerElements[this._selectedAnswer].classList.add('selected')\r\n  }\r\n}\r\n","import { UI } from \".\";\r\n\r\nexport class EnemyUI extends UI {\r\n  private _writingIntervalId: number\r\n  private _content: HTMLElement\r\n  constructor(isPlayer: boolean) {\r\n    super(isPlayer)\r\n    this._writingIntervalId = null\r\n    this._content = this._uiContainer.querySelector('.content')\r\n  }\r\n  async writeText(text: string): Promise<void> {\r\n    const message = text.split('')\r\n    return new Promise(resolve => {\r\n      this.content = ''\r\n      this._writingIntervalId = window.setInterval(() => {\r\n        if (!message.length) {\r\n          clearInterval(this._writingIntervalId)\r\n          return resolve()\r\n        }\r\n        const letter = message.shift()\r\n        this.content = this.content + letter\r\n      }, 50)\r\n    })\r\n  }\r\n  get content(): string {\r\n    return this._content.textContent\r\n  }\r\n  set content(text: string) {\r\n    this._content.textContent = text\r\n  }\r\n  reset(): void {\r\n    this.content = ''\r\n  }\r\n}\r\n","import { BattleComponent } from \".\"\r\n\r\nexport abstract class Fighter extends BattleComponent {\r\n  private _classBase: string\r\n  private _movingPosition: string[]\r\n  private _isShowing: boolean\r\n  public _characterContainer: HTMLElement\r\n  constructor(\r\n    isPlayer: boolean\r\n  ) {\r\n    super()\r\n    this._classBase = isPlayer ? 'player' : 'enemy'\r\n    this._characterContainer = document.querySelector(`.${this._classBase}`)\r\n    this._isShowing = false\r\n    this._movingPosition = isPlayer ? ['left', '64px'] : ['right', '96px']\r\n  }\r\n  async damage(): Promise<void> {\r\n    let blinks: number = 6\r\n    let intervalId: number = null\r\n    return new Promise(resolve => {\r\n      intervalId = window.setInterval(() => {\r\n        if(!blinks) {\r\n          clearInterval(intervalId)\r\n          return resolve()\r\n        }\r\n        this._characterContainer.style.opacity = (blinks % 2).toString()\r\n        blinks--\r\n      }, 100)\r\n    })\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    const [position, value] = this._movingPosition\r\n    if (this._isShowing) {\r\n      this._characterContainer.style[position] = value\r\n    } else {\r\n      this._characterContainer.style[position] = '-128px'\r\n    }\r\n  }\r\n  show() {\r\n    this.isShowing = true\r\n  }\r\n  hide() {\r\n    this.isShowing = false\r\n  }\r\n}\r\n","import { Fighter } from \".\";\r\n\r\nexport class PlayerFighter extends Fighter {\r\n  constructor(\r\n    isPlayer: boolean\r\n  ) {\r\n    super(isPlayer)\r\n  }\r\n}\r\n","import { Fighter } from \".\";\r\nimport { Sprite } from \"../../helpers\";\r\n\r\nexport class EnemyFighter extends Fighter {\r\n  private _enemyBackgrounds: {\r\n    [key: string]: number[]\r\n  }\r\n  private _name: string\r\n  private _sprite: Sprite\r\n  private _selectedBackgroundPosition: number[];\r\n  private _fighterBackgrounds: {\r\n    [key: string]: number[]\r\n  };\r\n  constructor(\r\n    isPlayer: boolean\r\n  ) {\r\n    super(isPlayer)\r\n    this._name = null\r\n    this._selectedBackgroundPosition = null\r\n    this._sprite = new Sprite(\r\n      'fighter',\r\n      './assets/images/players/fighters.png',\r\n      [4, 4]\r\n    )\r\n    this._fighterBackgrounds = null\r\n    this._sprite.init()\r\n    .then(() => {\r\n      const { sheet } = this._sprite\r\n      const [\r\n        Brett,\r\n        Scott,\r\n        Dane,,\r\n        TimD,\r\n        Uzair,,,\r\n        TimH,\r\n        Sarah,,,\r\n        Cody,\r\n        Blake\r\n      ] = sheet\r\n      this._fighterBackgrounds = {\r\n        Brett,\r\n        Scott,\r\n        TimD,\r\n        Uzair,\r\n        TimH,\r\n        Cody,\r\n        Sarah,\r\n        Dane,\r\n        Blake\r\n      }\r\n    })\r\n  }\r\n  set(name: string): void {\r\n    this._name = name\r\n    this._selectedBackgroundPosition = this._fighterBackgrounds[name]\r\n    const [ x, y ] = this._selectedBackgroundPosition\r\n    this._characterContainer.style.backgroundPosition = `${x}px ${y}px`\r\n  }\r\n}\r\n","import { BattleComponent } from \".\"\r\n\r\nexport class BackDrop extends BattleComponent {\r\n  private _isShowing: boolean\r\n  private _backDropElement: HTMLElement\r\n  constructor() {\r\n    super()\r\n    this._isShowing = false\r\n    this._backDropElement = document.querySelector('.battle-arena-backdrop')\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    this._backDropElement.style.opacity = Number(this._isShowing).toString()\r\n  }\r\n  show() {\r\n    this.isShowing = true\r\n  }\r\n  hide() {\r\n    this.isShowing = false\r\n  }\r\n}\r\n","import { Sprite } from \"../../helpers\"\r\nimport { BattleComponent } from \".\"\r\n\r\nexport class Arena extends BattleComponent {\r\n  private _isShowing: boolean\r\n  private _arenaElement: HTMLElement\r\n  private _sprite: Sprite\r\n  private _selectedBackgroundPosition: number[]\r\n  private _arenaBackgrounds: {\r\n    [key: string]: number[]\r\n  }\r\n  constructor() {\r\n    super()\r\n    this._isShowing = false\r\n    this._arenaElement = document.querySelector('.battle-arena-container')\r\n    this._selectedBackgroundPosition = null\r\n    this._sprite = new Sprite(\r\n      'background',\r\n      './assets/images/maps/battle-backgrounds.png',\r\n      [3, 4]\r\n    )\r\n    this._arenaBackgrounds = null\r\n    this._sprite.init()\r\n    .then(() => {\r\n      const { sheet } = this._sprite\r\n      const [\r\n        normal,\r\n        rock,\r\n        dirt,\r\n        ghost,\r\n        grass,\r\n        water,\r\n        psychic,\r\n        ,\r\n        ocean,\r\n        ice,\r\n        plant\r\n      ] = sheet\r\n      this._arenaBackgrounds = {\r\n        normal,\r\n        rock,\r\n        dirt,\r\n        ghost,\r\n        grass,\r\n        water,\r\n        psychic,\r\n        ocean,\r\n        ice,\r\n        plant\r\n      }\r\n    })\r\n  }\r\n  set(arena: string): void {\r\n    this._selectedBackgroundPosition = this._arenaBackgrounds[arena]\r\n    const [x, y] = this._selectedBackgroundPosition\r\n    this._arenaElement.style.backgroundPosition = `${x}px ${y}px`\r\n  }\r\n  get isShowing(): boolean {\r\n    return this._isShowing\r\n  }\r\n  set isShowing(bool: boolean) {\r\n    this._isShowing = bool\r\n    this._arenaElement.style.opacity = Number(this._isShowing).toString()\r\n  }\r\n  show() {\r\n    this.isShowing = true\r\n  }\r\n  hide() {\r\n    this.isShowing = false\r\n  }\r\n}\r\n","import { Battle } from './battle'\r\n\r\nexport * from './battle-component'\r\nexport * from './hp'\r\nexport * from './ui'\r\nexport * from './player-ui'\r\nexport * from './enemy-ui'\r\nexport * from './fighter'\r\nexport * from './player-fighter'\r\nexport * from './enemy-fighter'\r\nexport * from './backdrop'\r\nexport * from './arena'\r\nexport default Battle\r\n","import { Delay, Task, TaskQueue } from '../../helpers'\r\nimport { Observer } from '../'\r\nimport { battleData, generalQuestions } from '../../data'\r\nimport { BattleComponents, BattleData, Levels, Question, QuestionData } from '../../interfaces'\r\nimport {\r\n  Arena,\r\n  BackDrop,\r\n  EnemyFighter,\r\n  EnemyUI,\r\n  PlayerFighter,\r\n  PlayerUI,\r\n  HP\r\n} from '.'\r\n\r\nexport class Battle extends Observer {\r\n  private _taskQueue: TaskQueue\r\n  private _currentLevel: keyof Levels\r\n  private _currentQuestions: Question[]\r\n  private _currentQuestion: Question\r\n  private _currentLevelQuestionData: {\r\n    [key: string]: QuestionData\r\n  }\r\n  private _selectedQuestionData: QuestionData\r\n  private _battleData: BattleData\r\n  private _battleComponents: BattleComponents\r\n  constructor(taskQueue: TaskQueue, currentLevel: keyof Levels) {\r\n    super()\r\n    this._acceptedTasks = new Set(['scene-transition-start', 'battle-start', 'battle-end', 'battle'])\r\n    this._currentLevel = currentLevel\r\n    this._taskQueue = taskQueue\r\n    this._battleData = battleData\r\n    this._currentLevelQuestionData = battleData[currentLevel]\r\n    this._currentQuestions = null\r\n    this._selectedQuestionData = null\r\n    this._battleComponents = {\r\n      arena: new Arena(),\r\n      backdrop: new BackDrop(),\r\n      enemyFighter: new EnemyFighter(false),\r\n      enemyUI: new EnemyUI(false),\r\n      playerFighter: new PlayerFighter(true),\r\n      playerUI: new PlayerUI(true),\r\n      playerHP: new HP(true),\r\n      enemyHP: new HP(false)\r\n    }\r\n  }\r\n  handleUpdate({ name, action }: Task): void {\r\n    switch (name) {\r\n      case 'battle-start':\r\n        this.handleBattleStart(action)\r\n        break\r\n      case 'battle-end':\r\n        this.handleBattleEnd(action)\r\n        break\r\n      case 'scene-transition-start':\r\n        this.handleSceneTransitionStart(action)\r\n        break;\r\n      case 'battle':\r\n        this.handleBattle(action)\r\n        break;\r\n    }\r\n  }\r\n  async handleBattleEnd(wasLoss: boolean): Promise<void> {\r\n    await Delay.delay(500)\r\n    for (const component in this._battleComponents) {\r\n      this._battleComponents[component].hide()\r\n    }\r\n    await Delay.delay(500)\r\n    const { playerUI, enemyUI, playerHP, enemyHP } = this._battleComponents\r\n    playerUI.resetSelection()\r\n    enemyUI.reset()\r\n    playerHP.reset()\r\n    enemyHP.reset()\r\n    this._taskQueue.addTask(\r\n      new Task('npc-interaction-end')\r\n    )\r\n    this._taskQueue.addTask(\r\n      new Task('enable-input')\r\n    )\r\n    if(!wasLoss) {\r\n      this._taskQueue.addTask(new Task('simulate-input', ' '))\r\n    }\r\n  }\r\n  async handleBattle(action: any): Promise<void> {\r\n    if(!action) {\r\n      this._taskQueue.addTask(\r\n        new Task('disable-input')\r\n      )\r\n      const { playerUI, enemyUI, playerHP, enemyHP, playerFighter, enemyFighter } = this._battleComponents\r\n      const isCorrect = playerUI.selectedAnswer === this._currentQuestion.correct\r\n      this._currentQuestion = this._currentQuestions.shift()\r\n\r\n      isCorrect\r\n      ? playerUI.setCorrect()\r\n      : playerUI.setWrong()\r\n      await Delay.delay(500)\r\n      this._taskQueue.addTask(new Task('battle-damage'))\r\n      if(isCorrect) {\r\n        enemyHP.damage()\r\n        await enemyFighter.damage()\r\n      } else {\r\n        playerHP.damage()\r\n        await playerFighter.damage()\r\n      }\r\n      await Delay.delay(500)\r\n      playerUI.hide()\r\n      await Delay.delay(500)\r\n      if(playerHP.isDead || enemyHP.isDead) {\r\n        const {\r\n        winningMessage,\r\n        losingMessage,\r\n        onWin,\r\n        onLoss\r\n        } = this._selectedQuestionData\r\n        const message = playerHP.isDead\r\n        ? losingMessage\r\n        : winningMessage\r\n        await enemyUI.writeText(message)\r\n        await Delay.delay(500)\r\n        if(playerHP.isDead) {\r\n          const { name, action } = onLoss\r\n          if(name || action) this._taskQueue.addTask(new Task(name, action))\r\n        } else {\r\n          const { name, action } = onWin\r\n          this._taskQueue.addTask(new Task(name, action))\r\n        }\r\n        this._taskQueue.addTask(new Task('battle-end', playerHP.isDead))\r\n        return\r\n      }\r\n      if(playerHP.isLow || enemyHP.isLow) {\r\n        this._taskQueue.addTask(new Task('battle-health-low'))\r\n      }\r\n      playerUI.resetSelection()\r\n      playerUI.setAnswers(this._currentQuestion.answers)\r\n      await enemyUI.writeText(this._currentQuestion.question)\r\n      await Delay.delay(500)\r\n      playerUI.show()\r\n      this._taskQueue.addTask(\r\n        new Task(\r\n          'enable-input'\r\n        )\r\n      )\r\n    } else {\r\n      this._battleComponents.playerUI[action]()\r\n    }\r\n  }\r\n  handleSceneTransitionStart({ level }: any): void {\r\n    this._currentLevel = level\r\n    this._currentLevelQuestionData = battleData[level]\r\n  }\r\n  async handleBattleStart({ fighter }: any): Promise<void> {\r\n    if (!this._currentLevelQuestionData) throw new Error('Missing questions for this map.')\r\n    this._selectedQuestionData = this._currentLevelQuestionData[fighter]\r\n    if (!this._selectedQuestionData) throw new Error('Missing questions for this fighter.')\r\n    this._currentQuestions = this._selectedQuestionData.questions\r\n    ? [...this._selectedQuestionData.questions]\r\n    : [...generalQuestions]\r\n    this.shuffleQuestions()\r\n    this._currentQuestion = this._currentQuestions.shift()\r\n    const  {\r\n      arena,\r\n      backdrop,\r\n      enemyFighter,\r\n      enemyUI,\r\n      playerFighter,\r\n      playerUI,\r\n      playerHP,\r\n      enemyHP\r\n    } = this._battleComponents\r\n    const {\r\n      arena: background,\r\n      name,\r\n      sprite,\r\n      damageToEnemy,\r\n      damageToPlayer,\r\n      title,\r\n      openingMessage,\r\n    } = this._selectedQuestionData\r\n    arena.set(background)\r\n    enemyFighter.set(sprite)\r\n    enemyHP.setDamageCounter(damageToEnemy)\r\n    playerHP.setDamageCounter(damageToPlayer)\r\n    playerUI.setAnswers(this._currentQuestion.answers)\r\n    backdrop.show()\r\n    await Delay.delay(500)\r\n    arena.show()\r\n    await Delay.delay(500)\r\n    playerFighter.show()\r\n    enemyFighter.show()\r\n    await Delay.delay(500)\r\n    enemyUI.show()\r\n    await Delay.delay(500)\r\n    await enemyUI.writeText(`${title} ${name} challenges you to a battle!`)\r\n    await Delay.delay(500)\r\n    playerHP.show()\r\n    enemyHP.show()\r\n    await Delay.delay(500)\r\n    await enemyUI.writeText(openingMessage)\r\n    await Delay.delay(1000)\r\n    await enemyUI.writeText(this._currentQuestion.question)\r\n    await Delay.delay(500)\r\n    playerUI.show()\r\n    this._taskQueue.addTask(\r\n      new Task(\r\n        'battle-navigate-answer',\r\n        null\r\n      )\r\n    )\r\n  }\r\n  shuffleQuestions(): void {\r\n    for(let i = 0; i < this._currentQuestions.length; i++) {\r\n      const randomNum = Math.floor(Math.random() * this._currentQuestions.length)\r\n      const placeHolder = this._currentQuestions[i]\r\n      this._currentQuestions[i] = this._currentQuestions[randomNum]\r\n      this._currentQuestions[randomNum] = placeHolder\r\n    }\r\n  }\r\n  // writeText() {\r\n  //   this.content = ''\r\n  //   this._writingIntervalId = window.setInterval(() => {\r\n  //     if (!this._currentWritingText.length) {\r\n  //       clearInterval(this._writingIntervalId)\r\n  //       return\r\n  //     }\r\n  //     const letter = this._currentWritingText.shift()\r\n  //     this.content = this.content + letter\r\n  //   }, 50)\r\n  // }\r\n  loadPlayerUI(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  beginQuestion(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  loadHealthBars(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  showOpeningMessage(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  showStartingMessage(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  loadEnemyUI(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  loadInCharacters(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  setupBattleBackground(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n  setupBackdrop(): void {\r\n    throw new Error('Method not implemented.')\r\n  }\r\n}\r\n","import { Observer } from './'\nimport { Delay, Task, TaskQueue } from '../helpers'\n\nexport class Transition extends Observer {\n  private _domElement: HTMLElement\n  private _taskQueue: TaskQueue\n  constructor(taskQueue: TaskQueue) {\n    super()\n    this._acceptedTasks = new Set(['scene-transition-start', 'scene-transition-end', 'start-game'])\n    this._domElement = document.getElementById('transition')\n    this._taskQueue = taskQueue\n  }\n  handleUpdate({ name }: Task): void {\n    switch (name) {\n      case 'scene-transition-start':\n        this.handleSceneTransitionStart()\n      break;\n      case 'scene-transition-end':\n        this.handleSceneTransitionEnd()\n      break;\n      case 'start-game':\n        this.handleStartGame()\n      break;\n    }\n  }\n  handleStartGame() {\n    this.hide()\n  }\n  async handleSceneTransitionStart() {\n    this.show()\n    await Delay.delay(1000)\n    this._taskQueue.addTask(\n      new Task(\n        'scene-transition-end',\n        null\n      )\n    )\n  }\n  handleSceneTransitionEnd() {\n    this.hide()\n  }\n  show(): void {\n    this._domElement.style.opacity = '1'\n  }\n  hide(): void {\n    this._domElement.style.opacity = '0'\n  }\n}\n","import { Observer } from './'\nimport { Delay, Task, TaskQueue } from '../helpers'\nimport { Levels, SoundFile } from '../interfaces'\n\nexport class Sound extends Observer {\n  private _path: string\n  private _sounds : {\n    [key: string]: HTMLAudioElement\n  }\n  private _isMuted: boolean\n  private _currentLevel: string\n  constructor(currentLevel: string) {\n    super()\n    this._acceptedTasks = new Set([\n      'toggle-sound',\n      'start-game',\n      'scene-transition-start',\n      'battle-health-low',\n      'battle-damage',\n      'battle-end',\n      'battle-start',\n      'interaction',\n      'dialogue',\n      'battle',\n      'wall-bump'\n    ])\n    this._path = './assets/audio/'\n    this._sounds = null\n    this._isMuted = true\n    this._currentLevel = currentLevel\n  }\n  get isMuted(): boolean {\n    return this._isMuted\n  }\n  set isMuted(bool: boolean) {\n    this._isMuted = bool\n    for (const key in this._sounds) {\n      this._sounds[key].volume = this._isMuted ? 0 : .2\n    }\n  }\n  stopAllSounds(): void {\n    for(const key in this._sounds) {\n      this._sounds[key].pause()\n      this._sounds[key].currentTime = 0\n    }\n  }\n  handleUpdate({ name, action }: Task): void {\n    switch (name) {\n      case 'start-game':\n        this.handleStartGame()\n      break;\n      case 'toggle-sound':\n        this.handleToggleSound()\n      break;\n      case 'scene-transition-start':\n        this.handleSceneTransitionStart(action)\n      break;\n      case 'battle-start':\n        this.handleBattleStart()\n      break;\n      case 'battle-damage':\n        this.handleBattleDamage()\n      break;\n      case 'battle-end':\n        this.handleBattleEnd()\n        break;\n      case 'battle-health-low':\n        this.handleBattleHealthLow()\n      break;\n      case 'interaction':\n      case 'dialogue':\n      case 'battle':\n        this.handleSelect()\n      break;\n      case 'wall-bump':\n        this.handleWallBump()\n      break;\n      }\n    }\n  handleStartGame(): void {\n    this.playMapSound(this._currentLevel)\n  }\n  handleWallBump(): void {\n    this._sounds.wall.play()\n  }\n  handleSelect(): void {\n    this._sounds.select.currentTime = 0\n    this._sounds.select.play()\n  }\n  handleBattleEnd(): void {\n    this.stopAllSounds()\n    this.playMapSound(this._currentLevel)\n  }\n  handleBattleDamage(): void {\n    this._sounds.battleDamage.play()\n  }\n  handleBattleHealthLow(): void {\n    this._sounds.lowHealth.play()\n  }\n  handleBattleStart(): void {\n    this.stopAllSounds()\n    let sound = null\n    switch (this._currentLevel) {\n      case 'gymArena1PreBattle':\n      case 'gymArena2PreBattle':\n      case 'gymArena3PreBattle':\n      case 'gymArena4PreBattle':\n        sound = 'gymBattle'\n      break\n      case 'gymArena5PreBattle':\n        sound = 'gymArena5Battle'\n      break\n      case 'gymArena6':\n        sound = 'gymArena6Battle'\n      break\n      default:\n        sound = 'battleStart'\n      break\n    }\n    this._sounds[sound].play()\n  }\n  handleToggleSound(): void {\n    this.isMuted = !this.isMuted\n  }\n  playMapSound(level: string) {\n    let sound = null\n    switch(level) {\n      case 'pokemonCenter':\n        sound = 'pokemonCenter'\n      break\n      case 'home':\n        sound = 'home'\n      break\n      case 'battleTower':\n        sound = 'battleTower'\n      break\n      case 'lfzEntrance':\n        sound = 'lfzEntrance'\n      break\n      case 'gymEntrance':\n      case 'gymArena1PreBattle':\n      case 'gymArena2PreBattle':\n      case 'gymArena3PreBattle':\n      case 'gymArena4PreBattle':\n      case 'gymArena1PostBattle':\n      case 'gymArena2PostBattle':\n      case 'gymArena3PostBattle':\n      case 'gymArena4PostBattle':\n        sound = 'gym'\n      break\n      case 'gymArena5PostBattle':\n      case 'gymArena6':\n        sound = 'gymArena6'\n      break\n      case 'casino':\n      case 'casinoRoom':\n        sound = 'casino'\n      break\n    }\n    this._sounds[sound] && this._sounds[sound].play()\n  }\n  async handleSceneTransitionStart({ level }: any): Promise<void> {\n    this._currentLevel = level\n    if ([\n      'gymArena1PostBattle',\n      'gymArena2PostBattle',\n      'gymArena3PostBattle',\n      'gymArena4PostBattle',\n      'gymArena5PostBattle'\n    ].some(l => l === level)) return\n    this.stopAllSounds()\n    this._sounds.doorEnter.play()\n    await Delay.delay(500)\n    this.playMapSound(level)\n  }\n  async loadSound(\n    file: string,\n    key:string,\n    isLooping: boolean\n    ): Promise<{[key: string]: HTMLAudioElement}> {\n    return new Promise((resolve, reject) => {\n      const audio = new Audio()\n      audio.volume = 0\n      audio.loop = isLooping\n      audio.onloadeddata = () => resolve({[key]: audio})\n      audio.onerror = () => reject()\n      audio.src = file\n    })\n  }\n  async init(): Promise<void> {\n    const soundFiles: SoundFile[] = [\n      {\n        key: 'doorEnter',\n        file: 'door-enter.mp3',\n        isLooping: false\n      },\n      {\n        key: 'lowHealth',\n        file: 'low-health.mp3',\n        isLooping: false\n      },\n      {\n        key: 'battleDamage',\n        file: 'battle-damage.mp3',\n        isLooping: false\n      },\n      {\n        key: 'battleStart',\n        file: 'battle-start.mp3',\n        isLooping: true\n      },\n      {\n        key: 'pokemonCenter',\n        file: 'pokemon-center.mp3',\n        isLooping: true\n      },\n      {\n        key: 'select',\n        file: 'select.mp3',\n        isLooping: false\n      },\n      {\n        key: 'wall',\n        file: 'wall.mp3',\n        isLooping: false\n      },\n      {\n        key: 'home',\n        file: 'home.mp3',\n        isLooping: true\n      },\n      // HEER\n      {\n        key: 'battleTower',\n        file: 'battle-tower.mp3',\n        isLooping: true\n      },\n      {\n        key: 'casino',\n        file: 'casino.mp3',\n        isLooping: true\n      },\n      {\n        key: 'gymArena5Battle',\n        file: 'gym-arena-5-battle.mp3',\n        isLooping: true\n      },\n      {\n        key: 'gymArena6Battle',\n        file: 'gym-arena-6-battle.mp3',\n        isLooping: true\n      },\n      {\n        key: 'gymArena6',\n        file: 'gym-arena-6.mp3',\n        isLooping: true\n      },\n      {\n        key: 'gymBattle',\n        file: 'gym-battle.mp3',\n        isLooping: true\n      },\n      {\n        key: 'gym',\n        file: 'gym.mp3',\n        isLooping: true\n      },\n      {\n        key: 'lfzEntrance',\n        file: 'lfz-entrance.mp3',\n        isLooping: true\n      }\n    ]\n   const sounds = await Promise.all(soundFiles.map(({key, file, isLooping}) => (\n     this.loadSound(`${this._path}${file}`, key, isLooping)\n   )))\n   this._sounds = sounds.reduce((all, sound) => ({ ...all, ...sound }))\n  }\n}\n","import { Observer } from \".\"\nimport { Task } from \"../helpers\"\n\nexport class LoadingScreen extends Observer {\n  private _container: HTMLElement\n  private _message: HTMLElement\n  constructor() {\n    super()\n    this._acceptedTasks = new Set(['start-game'])\n    this._container = document.getElementById('loading-screen')\n    this._message = <HTMLElement>this._container.firstElementChild\n  }\n  handleUpdate({ name }: Task): void {\n    switch(name) {\n      case 'start-game':\n        this.handleStartGame()\n      break;\n    }\n  }\n  handleStartGame(): void {\n    this.hide()\n  }\n  get message (): string {\n    return this._message.textContent\n  }\n  set message(text: string) {\n    this._message.textContent = text\n  }\n  show() {\n    this._container.style.opacity = '1'\n  }\n  hide() {\n    this._container.style.opacity = '0'\n  }\n}\n","import Game from \"./game\";\r\n\r\nconst game = new Game()\r\n\r\ngame.start()\r\n","import Engine from './engine'\r\nimport { Camera, Player, Level, Input, NPCManager, Dialogue, Transition, Sound, LoadingScreen } from './entities'\r\nimport Battle from './entities/battle'\r\nimport { TaskQueue } from './helpers'\r\n\r\nexport default class Game {\r\n  $root: HTMLElement\r\n  engine: Engine\r\n  input: Input\r\n  taskQueue: TaskQueue\r\n  loadingScreen: LoadingScreen\r\n  level: Level\r\n  npcManager: NPCManager\r\n  dialogue: Dialogue\r\n  camera: Camera\r\n  player: Player\r\n  battle: Battle\r\n  transition: Transition\r\n  sound: Sound\r\n  constructor() {\r\n    this.$root = document.getElementById('root')\r\n    this.taskQueue = new TaskQueue()\r\n    this.loadingScreen = new LoadingScreen()\r\n    this.engine = new Engine(this.taskQueue)\r\n    this.level = new Level('home', this.$root)\r\n    this.npcManager = new NPCManager('home', this.$root)\r\n    this.camera = new Camera(this.taskQueue, 640, 384, this.$root, 'home')\r\n    this.dialogue = new Dialogue(this.taskQueue, 'home')\r\n    this.battle = new Battle(this.taskQueue, 'home')\r\n    this.player = new Player(\r\n      'MC',\r\n      './assets/images/players/player.png',\r\n      [4, 6],\r\n      this.taskQueue,\r\n      'home',\r\n      this.level.isSceneTransition.bind(this.level),\r\n      this.level.getSceneTransition.bind(this.level),\r\n      this.level.isInteraction.bind(this.level),\r\n      this.level.getInteraction.bind(this.level),\r\n      this.level.isSpaceWalkable.bind(this.level)\r\n    )\r\n    this.input = new Input(this.taskQueue)\r\n    this.transition = new Transition(this.taskQueue)\r\n    this.sound = new Sound('home')\r\n  }\r\n  setupDOM(...args: Array<HTMLElement>) {\r\n    this.$root.append(...args)\r\n  }\r\n  async start(): Promise<void> {\r\n    this.loadingScreen.message = 'Loading Maps...'\r\n    const playerSpawnPoint = await this.level.init()\r\n    this.loadingScreen.message = 'Loading Player...'\r\n    const playerElement = await this.player.init(playerSpawnPoint)\r\n    this.loadingScreen.message = 'Loading NPCs...'\r\n    await this.npcManager.loadNPCImages()\r\n    const npcElements = await this.npcManager.init()\r\n    this.loadingScreen.message = 'Loading Sounds...'\r\n    await this.sound.init()\r\n    this.loadingScreen.message = 'Loading Game...'\r\n    const cameraElement = this.camera.init(this.player)\r\n    const dialogueElement = this.dialogue.init()\r\n    this.setupDOM(playerElement, cameraElement, dialogueElement,...npcElements)\r\n    this.engine.addObserver(this.transition)\r\n    this.engine.addObserver(this.sound)\r\n    this.engine.addObserver(this.camera)\r\n    this.engine.addObserver(this.battle)\r\n    this.engine.addObserver(this.player)\r\n    this.engine.addObserver(this.dialogue)\r\n    this.engine.addObserver(this.npcManager)\r\n    this.engine.addObserver(this.level)\r\n    this.engine.addObserver(this.input)\r\n    this.engine.addObserver(this.loadingScreen)\r\n    this.engine.start()\r\n    this.input.init()\r\n    this.loadingScreen.message = 'Press Space to Start'\r\n  }\r\n}\r\n"],"sourceRoot":""}